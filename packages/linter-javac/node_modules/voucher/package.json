{
  "_args": [
    [
      {
        "raw": "voucher@^0.1.2",
        "scope": null,
        "escapedName": "voucher",
        "name": "voucher",
        "rawSpec": "^0.1.2",
        "spec": ">=0.1.2 <0.2.0",
        "type": "range"
      },
      "/tmp/d-117318-25241-1j92abi.h31ru23xr/package.tgz"
    ]
  ],
  "_from": "voucher@>=0.1.2 <0.2.0",
  "_id": "voucher@0.1.2",
  "_inCache": true,
  "_location": "/linter-javac/voucher",
  "_npmUser": {
    "name": "noseglid",
    "email": "noseglid@gmail.com"
  },
  "_npmVersion": "1.4.14",
  "_phantomChildren": {},
  "_requested": {
    "raw": "voucher@^0.1.2",
    "scope": null,
    "escapedName": "voucher",
    "name": "voucher",
    "rawSpec": "^0.1.2",
    "spec": ">=0.1.2 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/linter-javac"
  ],
  "_resolved": "https://registry.npmjs.org/voucher/-/voucher-0.1.2.tgz",
  "_shasum": "6a72560dc67fb3c16a3ddab6c6f370f7034b69ab",
  "_shrinkwrap": null,
  "_spec": "voucher@^0.1.2",
  "_where": "/tmp/d-117318-25241-1j92abi.h31ru23xr/package.tgz",
  "author": {
    "name": "Alexander Olsson",
    "email": "noseglid@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/noseglid/voucher/issues"
  },
  "dependencies": {
    "es6-promise": "^1.0.0"
  },
  "description": "Convert asynchronous function calls with callbacks to es6 promises",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "6a72560dc67fb3c16a3ddab6c6f370f7034b69ab",
    "tarball": "https://registry.npmjs.org/voucher/-/voucher-0.1.2.tgz"
  },
  "gitHead": "3f06dae3f755cef5112704491a5c8107d30de483",
  "homepage": "https://github.com/noseglid/voucher",
  "keywords": [
    "promise",
    "es6",
    "wrapper"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "noseglid",
      "email": "noseglid@gmail.com"
    }
  ],
  "name": "voucher",
  "optionalDependencies": {},
  "readme": "# Voucher\n\nPromises is coming in the new ES6 spec. [This excellent article](http://www.html5rocks.com/en/tutorials/es6/promises/) should convince you to use it.\n\nA lot of libraries today still takes callback arguments rather than returning promises. Voucher will wrap the calls and give you a promise to work with. Easy.\n\n## Install\n\n    npm install voucher\n\n## Examples\n\n### NodeJS\n\n```javascript\nvar crypto = require('crypto');\nvar voucher = require('voucher');\n\nvoucher(crypto.pseudoRandomBytes, 12).then(function(randomBytesBuffer) {\n  console.log(randomBytesBuffer.toString('hex'));\n});\n```\n\n```javascript\nvar fs = require('fs');\nvar voucher = require('voucher');\n\nvoucher(fs.readFile, '/etc/passwd', { encoding: 'utf8' }).then(function(content) {\n  console.log(content); // Logs the contents of '/etc/passwd'\n}).catch(function(error) {\n  console.log('Something went wrong when reading file:', error);\n});\n```\n\n## Requirements\n  * The callback argument of the function specified __must be the last argument__.\n  * The callback __must__ be invoked with `error` as its first argument.\n\nAll NodeJS native functions works well. For instance, `fs.readFile` takes a\n`filename` parameter, then an optional `options` object and then the callback function.\nThe callback function receives two parameters, first `err` which indicates if\nanything went wrong, then the result of the readFile operation.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/noseglid/voucher.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.1.2"
}
