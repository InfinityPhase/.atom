{"version":3,"sources":["webpack://platformio-node-helpers/webpack/universalModuleDefinition","webpack://platformio-node-helpers/webpack/bootstrap","webpack://platformio-node-helpers/./src/misc.js","webpack://platformio-node-helpers/external \"fs-plus\"","webpack://platformio-node-helpers/external \"path\"","webpack://platformio-node-helpers/./src/core.js","webpack://platformio-node-helpers/external \"request\"","webpack://platformio-node-helpers/external \"querystringify\"","webpack://platformio-node-helpers/external \"tmp\"","webpack://platformio-node-helpers/./src/installer/stages/base.js","webpack://platformio-node-helpers/./src/project/indexer.js","webpack://platformio-node-helpers/./src/index.js","webpack://platformio-node-helpers/external \"os\"","webpack://platformio-node-helpers/external \"cross-spawn\"","webpack://platformio-node-helpers/./src/home.js","webpack://platformio-node-helpers/external \"jsonrpc-lite\"","webpack://platformio-node-helpers/external \"tcp-port-used\"","webpack://platformio-node-helpers/external \"ws\"","webpack://platformio-node-helpers/./src/project/tasks.js","webpack://platformio-node-helpers/external \"ini\"","webpack://platformio-node-helpers/./src/installer/stages/platformio-core.js","webpack://platformio-node-helpers/./src/installer/helpers.js","webpack://platformio-node-helpers/external \"tar\"","webpack://platformio-node-helpers/external \"zlib\"","webpack://platformio-node-helpers/external \"semver\"","webpack://platformio-node-helpers/./src/project/observer.js"],"names":["root","factory","exports","module","require","define","amd","global","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__5__","__WEBPACK_EXTERNAL_MODULE__6__","__WEBPACK_EXTERNAL_MODULE__11__","__WEBPACK_EXTERNAL_MODULE__13__","__WEBPACK_EXTERNAL_MODULE__14__","__WEBPACK_EXTERNAL_MODULE__15__","__WEBPACK_EXTERNAL_MODULE__17__","__WEBPACK_EXTERNAL_MODULE__20__","__WEBPACK_EXTERNAL_MODULE__22__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","sleep","ms","Promise","resolve","setTimeout","patchOSEnviron","caller","useBuiltinPIOCore","extraPath","extraVars","process","env","PLATFORMIO_CALLER","platform","LC_ALL","PLATFORMIO_DISABLE_PROGRESSBAR","keys","forEach","Path","PATH","path","delimiter","_core","getEnvBinDir","getEnvDir","join","split","filter","includes","runCommand","processHTTPRequest","url","callback","options","headers","User-Agent","console","info","_request2","default","err","response","body","getPythonExecutable","async","customDirs","exenames","IS_WINDOWS","locations","push","getHomeDir","item","location","exename","executable","normalize","replace","fs","isFileSync","isPython2","getErrorReportUrl","title","description","errorToUrls","qs","stringify","encodeURIComponent","isPIOProject","dir","arrayRemove","array","element","splice","indexOf","disposeSubscriptions","subscriptions","length","pop","dispose","reportError","data","v","tid","cid","s4","Math","floor","random","toString","substring","uuid","aid","av","PACKAGE_VERSION","an","os","type","release","arch","exd","exf","request","post","startsWith","cmd","args","outputLines","errorLines","completed","tmpDir","some","basename","tmpEnv","assign","tmp","dirSync","getCacheDir","unsafeCleanup","TMPDIR","TEMP","TMP","spawnOptions","child","_crossSpawn2","stdout","on","line","stderr","onExit","code","removeSync","warn","map","x","pythonLines","isDirectorySync","makeTreeSync","getVersion","reject","_misc","trim","match","Error","runPIOCommand","baseArgs","userHomeDir","HOME","USERPROFILE","result","PLATFORMIO_HOME_DIR","char","charCodeAt","homeDirPathFormat","parse","format","base","BaseStage","stateStorage","onStatusChange","params","_classCallCheck","this","_status","STATUS_CHECKING","status","toLocaleLowerCase","getValue","stateKey","setValue","_path","ProjectIndexer","projectDir","dirWatchSubscriptions","_rebuildTimeout","undefined","_updateDirWatchersTimeout","_inProgress","setupWatchers","clearTimeout","rebuild","AUTO_REBUILD_DELAY","withProgress","ide","watcher","createFileSystemWatcher","onDidCreate","requestRebuild","requestUpdateDirWatchers","onDidChange","onDidDelete","updateDirWatchers","fetchWatchDirs","createDirSystemWatcher","PythonExecutable","scriptLines","cwd","core","home","misc","_tasks","installer","PlatformIOCoreStage","project","ProjectObserver","ProjectTasks","TaskItem","getFrontendUri","serverHost","serverPort","loadState","storage","start","theme","workspace","getFrontendVersion","HTTP_PORT","error","statusCode","JSON","version","isServerStarted","ensureServerStarted","attemptNums","lastError","_port","_ensureServerStarted","HTTP_PORT_BEGIN","HTTP_PORT_END","HTTP_HOST","shutdownServer","showAtStartup","state","showOnStartup","SERVER_LAUNCH_TIMEOUT","IDECMDS_LISTENER_STATUS","tcpPortUsed","check","then","port","inUse","findFreePort","host","waitUntilUsed","onIDECommand","sock","ws","perMessageDeflate","onopen","send","jsonrpc","onclose","onmessage","event","payload","method","listenIDECommands","statePath","readFileSync","projectConf","content","readFile","ini","projectData","section","ENV_NAME_PREFIX","slice","baseTasks","task","index","id","coreEnv","helpers","_this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","setGracefulCleanup","pythonPrompt","STATUS_TRY_AGAIN","pythonExecutable","installPythonForWindows","prompt","STATUS_CUSTOMEXE","STATUS_ABORT","STATUS_FAILED","pythonArch","msiUrl","pythonVersion","msiInstaller","download","targetDir","pythonPath","installPythonFromWindowsMSI","administrative","logFile","shell","envDir","cleanVirtualEnvDir","whereIsPython","archivePath","virtualenvUrl","dstDir","extractTarGz","virtualenvScript","listTreeSync","find","userNotification","isCondaInstalled","createVirtualenvWithConda","createVirtualenvWithLocal","createVirtualenvWithDownload","errDl","installVirtualenvPackage","errPkg","pipArchive","pipUrl","upgradePIP","useDevelopmentPIOCore","pioCoreDevelopUrl","pioCoreChecked","lastIDEVersion","currentCoreVersion","newState","initState","now","Date","getTime","PLATFORMIO_IDE","UPGRADE_PIOCORE_TIMEOUT","parseInt","semver","prerelease","coreVersion","PEPverToSemver","lt","autoUpgradePIOCore","pioCoreMinVersion","setUseBuiltinPIOCore","STATUS_SUCCESSED","STATUS_INSTALLING","createVirtualenv","installPIOCore","installPIOHome","source","target","retries","contentLength","head","fileExistsAndSizeMatches","_download","destination","createReadStream","pipe","zlib","createGunzip","tar","extract","pepver","getSizeSync","proxy","apmPath","atom","packages","getApmPath","HTTPS_PROXY","HTTP_PROXY","file","createWriteStream","_indexer","_indexers","projectDirs","indexer"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"fs-plus\"), require(\"request\"), require(\"querystringify\"), require(\"tmp\"), require(\"cross-spawn\"), require(\"jsonrpc-lite\"), require(\"tcp-port-used\"), require(\"ws\"), require(\"ini\"), require(\"tar\"), require(\"semver\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"platformio-node-helpers\", [\"fs-plus\", \"request\", \"querystringify\", \"tmp\", \"cross-spawn\", \"jsonrpc-lite\", \"tcp-port-used\", \"ws\", \"ini\", \"tar\", \"semver\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"platformio-node-helpers\"] = factory(require(\"fs-plus\"), require(\"request\"), require(\"querystringify\"), require(\"tmp\"), require(\"cross-spawn\"), require(\"jsonrpc-lite\"), require(\"tcp-port-used\"), require(\"ws\"), require(\"ini\"), require(\"tar\"), require(\"semver\"));\n\telse\n\t\troot[\"platformio-node-helpers\"] = factory(root[\"fs-plus\"], root[\"request\"], root[\"querystringify\"], root[\"tmp\"], root[\"cross-spawn\"], root[\"jsonrpc-lite\"], root[\"tcp-port-used\"], root[\"ws\"], root[\"ini\"], root[\"tar\"], root[\"semver\"]);\n})(global, function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__4__, __WEBPACK_EXTERNAL_MODULE__5__, __WEBPACK_EXTERNAL_MODULE__6__, __WEBPACK_EXTERNAL_MODULE__11__, __WEBPACK_EXTERNAL_MODULE__13__, __WEBPACK_EXTERNAL_MODULE__14__, __WEBPACK_EXTERNAL_MODULE__15__, __WEBPACK_EXTERNAL_MODULE__17__, __WEBPACK_EXTERNAL_MODULE__20__, __WEBPACK_EXTERNAL_MODULE__22__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","/**\n * Copyright (c) 2017-present PlatformIO <contact@platformio.org>\n * All rights reserved.\n *\n * This source code is licensed under the license found in the LICENSE file in\n * the root directory of this source tree.\n */\n\nimport { getCacheDir , getEnvBinDir, getEnvDir, getHomeDir } from './core';\n\nimport fs from 'fs-plus';\nimport os from 'os';\nimport path from 'path';\nimport qs from 'querystringify';\nimport request from 'request';\nimport spawn from 'cross-spawn';\nimport tmp from 'tmp';\n\nexport const IS_WINDOWS = process.platform.startsWith('win');\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function patchOSEnviron({ caller, useBuiltinPIOCore=true, extraPath, extraVars }) {\n  process.env.PLATFORMIO_CALLER = caller;\n  // Fix for platformio-atom-ide/issues/112\n  if (process.platform === 'darwin') {\n    process.env.LC_ALL = 'en_US.UTF-8';\n  }\n  if (caller === 'atom') {\n    process.env.PLATFORMIO_DISABLE_PROGRESSBAR = 'true';\n  }\n\n  if (extraVars) {\n    Object.keys(extraVars).forEach(name => process.env[name] = extraVars[name]);\n  }\n\n  // Fix for https://github.com/atom/atom/issues/11302\n  if (process.env.Path) {\n    if (process.env.PATH) {\n      process.env.PATH += path.delimiter + process.env.Path;\n    } else {\n      process.env.PATH = process.env.Path;\n    }\n  }\n\n  if (useBuiltinPIOCore) { // Insert bin directory into PATH\n    process.env.PATH = [getEnvBinDir(), getEnvDir(), process.env.PATH].join(path.delimiter);\n  } else { // Remove bin directory from PATH\n    process.env.PATH = process.env.PATH.split(path.delimiter).filter(p => !p.includes(getEnvDir())).join(path.delimiter);\n  }\n\n  if (extraPath && !process.env.PATH.includes(extraPath)) {\n    process.env.PATH = [extraPath, process.env.PATH].join(path.delimiter);\n  }\n\n  // copy PATH to Path (Windows issue)\n  if (process.env.Path) {\n    process.env.Path = process.env.PATH;\n  }\n}\n\nexport function runCommand(cmd, args, callback=undefined, options = {}) {\n  console.info('runCommand', cmd, args, options);\n  const outputLines = [];\n  const errorLines = [];\n  let completed = false;\n  let tmpDir = null;\n\n  if (IS_WINDOWS && ['pip', 'virtualenv'].some(item => [path.basename(cmd), ...args].includes(item))) {\n    // Overwrite TMPDIR and avoid issue with ASCII error for Python's PIP\n    const tmpEnv = Object.assign({}, process.env);\n    tmpDir = tmp.dirSync({\n      dir: getCacheDir(),\n      unsafeCleanup: true\n    }).name;\n    tmpEnv.TMPDIR = tmpEnv.TEMP = tmpEnv.TMP = tmpDir;\n    options.spawnOptions = options.spawnOptions || {};\n    options.spawnOptions.env = tmpEnv;\n  }\n\n  try {\n    const child = spawn(cmd, args, options.spawnOptions);\n\n    child.stdout.on('data', (line) => outputLines.push(line));\n    child.stderr.on('data', (line) => errorLines.push(line));\n    child.on('close', onExit);\n    child.on('error', (err) => {\n      errorLines.push(err.toString());\n      onExit(-1);\n    }\n    );\n  } catch (err) {\n    errorLines.push(err.toString());\n    onExit(-1);\n  }\n\n  function onExit(code) {\n    if (completed || !callback) {\n      return;\n    }\n    completed = true;\n\n    if (tmpDir) {\n      try {\n        fs.removeSync(tmpDir);\n      } catch (err) {\n        console.warn(err);\n      }\n    }\n\n    const stdout = outputLines.map(x => x.toString()).join('');\n    const stderr = errorLines.map(x => x.toString()).join('');\n    callback(code, stdout, stderr);\n  }\n}\n\nexport function processHTTPRequest(url, callback, options) {\n  options = options || {};\n  options.url = url;\n  if (!options.hasOwnProperty('headers')) {\n    options.headers = {\n      'User-Agent': 'PlatformIO'\n    };\n  }\n  console.info('processHTTPRequest', options);\n  return request(options, (err, response, body) => {\n    return callback(err, response, body);\n  });\n}\n\nexport async function getPythonExecutable(useBuiltinPIOCore=true, customDirs = undefined) {\n  const exenames = IS_WINDOWS ? ['python.exe'] : ['python2.7', 'python2', 'python'];\n  const locations = customDirs || [];\n\n  if (useBuiltinPIOCore) {\n    locations.push(getEnvBinDir());\n    locations.push(getEnvDir()); // conda\n  }\n  if (IS_WINDOWS) {\n    // isolated Python 2.7 in PlatformIO Home directory\n    locations.push(path.join(getHomeDir(), 'python27'));\n  }\n  // extend with paths from env.PATH\n  process.env.PATH.split(path.delimiter).forEach(item => {\n    if (!locations.includes(item)) {\n      locations.push(item);\n    }\n  });\n\n  for (const location of locations) {\n    for (const exename of exenames) {\n      const executable = path.normalize(path.join(location, exename)).replace(/\"/g, '');\n      if (fs.isFileSync(executable) && (await isPython2(executable))) {\n        return executable;\n      }\n    }\n  }\n  return undefined;\n}\n\nfunction isPython2(executable) {\n  const pythonLines = [\n    'import os, sys',\n    'assert sys.platform != \"cygwin\"',\n    'assert not sys.platform.startswith(\"win\") or not any(s in sys.executable.lower() for s in (\"msys\", \"mingw\", \"emacs\"))',\n    'assert not sys.platform.startswith(\"win\") or os.path.isdir(os.path.join(sys.prefix, \"Scripts\"))',\n    'assert sys.version_info < (3, 0, 0)'\n  ];\n  if (IS_WINDOWS) {\n    pythonLines.push('assert sys.version_info >= (2, 7, 9)');\n  } else {\n    pythonLines.push('assert sys.version_info >= (2, 7, 5)');\n  }\n  const args = ['-c', pythonLines.join(';')];\n  return new Promise(resolve => {\n    runCommand(\n      executable,\n      args,\n      code => {\n        resolve(code === 0);\n      }\n    );\n  });\n}\n\nexport function getErrorReportUrl(title, description) {\n  const errorToUrls = [\n    ['_remove_dead_weakref', 'https://github.com/platformio/platformio-vscode-ide/issues/142'],\n    [\"Could not install 'tool-pioplus'\", 'https://github.com/platformio/platformio-vscode-ide/issues/131'],\n    ['Could not start PIO Home server: Error: timeout', 'https://github.com/platformio/platformio-vscode-ide/issues/205']\n  ];\n  for (const item of errorToUrls) {\n    if (description.includes(item[0])) {\n      return item[1];\n    }\n  }\n  return `https://github.com/platformio/platformio-${process.env.PLATFORMIO_CALLER || 'vscode'}-ide/issues/new?${qs.stringify(\n    { title: encodeURIComponent(title), body: encodeURIComponent(description) })}`;\n}\n\nexport function isPIOProject(dir) {\n  return fs.isFileSync(path.join(dir, 'platformio.ini'));\n}\n\nexport function arrayRemove(array, element) {\n  return array.splice(array.indexOf(element), 1);\n}\n\nexport function disposeSubscriptions(subscriptions) {\n  while (subscriptions.length) {\n    subscriptions.pop().dispose();\n  }\n}\n\nfunction uuid() {\n  const s4 = () => Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  return `${s4()}${s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\n}\n\nexport function reportError(err) {\n  const data = {\n    v: 1,\n    tid: 'UA-1768265-13',\n    cid: uuid(),\n    aid: 'node.helpers',\n    av: PACKAGE_VERSION,\n    an: `${os.type()}, ${os.release()}, ${os.arch()}`,\n    t: 'exception',\n    exd: err.toString(),\n    exf: 1\n  };\n  if (process.env.PLATFORMIO_CALLER) {\n    data['cd1'] = process.env.PLATFORMIO_CALLER;\n  }\n  request.post('https://www.google-analytics.com/collect', {\n    body: qs.stringify(data)\n  });\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = require(\"path\");","/**\n * Copyright (c) 2017-present PlatformIO <contact@platformio.org>\n * All rights reserved.\n *\n * This source code is licensed under the license found in the LICENSE file in\n * the root directory of this source tree.\n */\n\nimport { IS_WINDOWS, runCommand } from './misc';\n\nimport fs from 'fs-plus';\nimport path from 'path';\n\n\nexport function getHomeDir() {\n  const userHomeDir = IS_WINDOWS && !process.env.HOME ? process.env.USERPROFILE : process.env.HOME;\n  const result = process.env.PLATFORMIO_HOME_DIR || path.join(userHomeDir || '~', '.platformio');\n  if (IS_WINDOWS) {\n    // Make sure that all path characters have valid ASCII codes.\n    for (const char of result) {\n      if (char.charCodeAt(0) > 127) {\n        // If they don't, put the pio home directory into the root of the disk.\n        const homeDirPathFormat = path.parse(result);\n        return path.format({\n          root: homeDirPathFormat.root,\n          dir: homeDirPathFormat.root,\n          base: '.platformio',\n          name: '.platformio'\n        });\n      }\n    }\n  }\n  return result;\n}\n\nexport function getEnvDir() {\n  return path.join(getHomeDir(), 'penv');\n}\n\nexport function getEnvBinDir() {\n  return path.join(getEnvDir(), IS_WINDOWS ? 'Scripts' : 'bin');\n}\n\nexport function getCacheDir() {\n  const dir = path.join(getHomeDir(), '.cache');\n  if (!fs.isDirectorySync(dir)) {\n    fs.makeTreeSync(dir);\n  }\n  return dir;\n}\n\nexport function getVersion() {\n  return new Promise((resolve, reject) => {\n    runCommand(\n      'platformio',\n      ['--version'],\n      (code, stdout, stderr) => {\n        if (code === 0) {\n          try {\n            return resolve(stdout.trim().match(/[\\d+\\.]+.*$/)[0]);\n          } catch (err) {\n            return reject(err.toString());\n          }\n        }\n        return reject(new Error(stderr));\n      }\n    );\n  });\n}\n\nexport function runPIOCommand(args, callback, options = {}) {\n  const baseArgs = ['-f'];\n  if (process.env.PLATFORMIO_CALLER) {\n    baseArgs.push('-c');\n    baseArgs.push(process.env.PLATFORMIO_CALLER);\n  }\n  runCommand(\n    'platformio',\n    [...baseArgs, ...args],\n    callback,\n    options\n  );\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","/**\n * Copyright (c) 2017-present PlatformIO <contact@platformio.org>\n * All rights reserved.\n *\n * This source code is licensed under the license found in the LICENSE file in\n * the root directory of this source tree.\n */\n\nexport default class BaseStage {\n\n  static STATUS_CHECKING = 0;\n  static STATUS_INSTALLING = 1;\n  static STATUS_SUCCESSED = 2;\n  static STATUS_FAILED = 3;\n\n  constructor(stateStorage, onStatusChange, params = {}) {\n    this.stateStorage = stateStorage;\n    this.onStatusChange = onStatusChange;\n    this.params = params;\n\n    this._status = BaseStage.STATUS_CHECKING;\n  }\n\n  get name() {\n    return 'Stage';\n  }\n\n  get status() {\n    return this._status;\n  }\n\n  set status(status) {\n    this._status = status;\n    this.onStatusChange();\n  }\n\n  get stateKey() {\n    return this.name.toLocaleLowerCase().replace(/\\s+/g, '-');\n  }\n\n  get state() {\n    return this.stateStorage.getValue(this.stateKey);\n  }\n\n  set state(value) {\n    this.stateStorage.setValue(this.stateKey, value);\n  }\n\n  check() {\n    throw new Error('Stage must implement a `check` method');\n  }\n\n  install() {\n    throw new Error('Stage must implement an `install` method');\n  }\n\n  destroy() {}\n\n}\n","/**\n * Copyright (c) 2017-present PlatformIO <contact@platformio.org>\n * All rights reserved.\n *\n * This source code is licensed under the license found in the LICENSE file in\n * the root directory of this source tree.\n */\n\nimport { disposeSubscriptions, getPythonExecutable, isPIOProject, runCommand } from '../misc';\n\nimport path from 'path';\nimport { runPIOCommand }  from '../core';\n\n\n export default class ProjectIndexer {\n\n    static AUTO_REBUILD_DELAY = 3000;\n\n    constructor(projectDir, options) {\n      this.projectDir = projectDir;\n      this.options = options;\n      this.subscriptions = [];\n      this.dirWatchSubscriptions = [];\n\n      this._rebuildTimeout = undefined;\n      this._updateDirWatchersTimeout = undefined;\n      this._inProgress = false;\n\n      this.setupWatchers();\n    }\n\n    requestRebuild() {\n      if (this._rebuildTimeout) {\n        clearTimeout(this._rebuildTimeout);\n      }\n      this._rebuildTimeout = setTimeout(this.rebuild.bind(this), ProjectIndexer.AUTO_REBUILD_DELAY);\n    }\n\n    rebuild() {\n      if (this._inProgress || !isPIOProject(this.projectDir)) {\n        return;\n      }\n      return this.options.withProgress(async () => {\n        this._inProgress = true;\n        try {\n          await new Promise((resolve, reject) => {\n            runPIOCommand(['init', '--ide', this.options.ide, '--project-dir', this.projectDir], (code, stdout, stderr) => {\n              if (code === 0) {\n                resolve();\n              } else {\n                reject(new Error(stderr));\n              }\n            });\n          });\n        } catch (err) {\n          console.warn(err);\n        }\n        this._inProgress = false;\n      });\n    }\n\n    setupWatchers() {\n      const watcher = this.options.createFileSystemWatcher(\n        path.join(this.projectDir, 'platformio.ini')\n      );\n      this.subscriptions.push(\n        watcher,\n        watcher.onDidCreate(() => {\n          this.requestRebuild();\n          this.requestUpdateDirWatchers();\n        }),\n        watcher.onDidChange(() => {\n          this.requestRebuild();\n          this.requestUpdateDirWatchers();\n        }),\n        watcher.onDidDelete(() => this.updateDirWatchers())\n      );\n      this.requestUpdateDirWatchers();\n    }\n\n    requestUpdateDirWatchers() {\n      if (this._updateDirWatchersTimeout) {\n        clearTimeout(this._updateDirWatchersTimeout);\n      }\n      this._updateDirWatchersTimeout = setTimeout(this.updateDirWatchers.bind(this), ProjectIndexer.AUTO_REBUILD_DELAY * 3);\n    }\n\n    async updateDirWatchers() {\n      disposeSubscriptions(this.dirWatchSubscriptions);\n      if (!isPIOProject(this.projectDir)) {\n        return;\n      }\n      try {\n        (await this.fetchWatchDirs()).forEach(dir => {\n          const watcher = this.options.createDirSystemWatcher(dir);\n          this.dirWatchSubscriptions.push(\n            watcher,\n            watcher.onDidCreate(() => this.requestRebuild()),\n            watcher.onDidChange(() => this.requestRebuild()),\n            watcher.onDidDelete(() => this.requestRebuild())\n          );\n        });\n      } catch (err) {\n        console.warn(err);\n      }\n    }\n\n    async fetchWatchDirs() {\n      if (!ProjectIndexer.PythonExecutable) {\n        ProjectIndexer.PythonExecutable = await getPythonExecutable(this.options.useBuiltinPIOCore);\n      }\n      const scriptLines = [\n        'from os.path import join',\n        'from platformio import util',\n        'print(\":\".join([join(util.get_home_dir(), \"lib\"), util.get_projectlib_dir(), util.get_projectlibdeps_dir()]))'\n      ];\n      return new Promise((resolve, reject) => {\n        runCommand(\n          ProjectIndexer.PythonExecutable,\n          ['-c', scriptLines.join(';')],\n          (code, stdout, stderr) => {\n            if (code === 0) {\n              resolve(stdout.toString().trim().split(':'));\n            } else {\n              reject(new Error(stderr));\n            }\n          },\n          {\n            spawnOptions: {\n              cwd: this.projectDir,\n            },\n          }\n        );\n      });\n    }\n\n    dispose() {\n      disposeSubscriptions(this.dirWatchSubscriptions);\n      disposeSubscriptions(this.subscriptions);\n      if (this._rebuildTimeout) {\n        clearTimeout(this._rebuildTimeout);\n      }\n      if (this._updateDirWatchersTimeout) {\n        clearTimeout(this._updateDirWatchersTimeout);\n      }\n    }\n }\n","/**\n * Copyright (c) 2017-present PlatformIO <contact@platformio.org>\n * All rights reserved.\n *\n * This source code is licensed under the license found in the LICENSE file in\n * the root directory of this source tree.\n */\n\nimport * as core from './core';\nimport * as home from './home';\nimport * as misc from './misc';\n\nimport { ProjectTasks, TaskItem} from './project/tasks';\n\nimport BaseStage from './installer/stages/base';\nimport PlatformIOCoreStage from './installer/stages/platformio-core';\nimport ProjectIndexer from './project/indexer';\nimport ProjectObserver from './project/observer';\n\nconst installer = {\n  BaseStage,\n  PlatformIOCoreStage\n};\n\nconst project = {\n  ProjectIndexer,\n  ProjectObserver,\n  ProjectTasks,\n  TaskItem\n};\n\nexport {\n  core,\n  home,\n  installer,\n  project,\n  misc\n};\n","module.exports = require(\"os\");","module.exports = __WEBPACK_EXTERNAL_MODULE__11__;","/**\n * Copyright (c) 2017-present PlatformIO <contact@platformio.org>\n * All rights reserved.\n *\n * This source code is licensed under the license found in the LICENSE file in\n * the root directory of this source tree.\n */\n\nimport { getHomeDir, runPIOCommand } from './core';\nimport { reportError, sleep } from './misc';\n\nimport fs from 'fs-plus';\nimport jsonrpc from 'jsonrpc-lite';\nimport path from 'path';\nimport qs from 'querystringify';\nimport request from 'request';\nimport tcpPortUsed from 'tcp-port-used';\nimport ws from 'ws';\n\n\nconst SERVER_LAUNCH_TIMEOUT = 5 * 60; // 5 minutes\nconst HTTP_HOST = '127.0.0.1';\nconst HTTP_PORT_BEGIN = 8010;\nconst HTTP_PORT_END = 8100;\nlet HTTP_PORT = 0;\nlet IDECMDS_LISTENER_STATUS = 0;\n\n\nexport function getFrontendUri(serverHost, serverPort, options) {\n  const stateStorage = (loadState() || {}).storage || {};\n  const params = {\n    start: options.start || '/',\n    theme: stateStorage.theme || options.theme,\n    workspace: stateStorage.workspace || options.workspace\n  };\n  Object.keys(params).forEach(key => {\n    if ([undefined, null].includes(params[key])) {\n      delete params[key];\n    }\n  });\n  return `http://${serverHost}:${serverPort}?${qs.stringify(params)}`;\n}\n\n\nexport async function getFrontendVersion(serverHost, serverPort) {\n  if (HTTP_PORT === 0) {\n    return undefined;\n  }\n  return await new Promise(resolve => {\n    request(`http://${serverHost}:${serverPort}/package.json`, function (error, response, body) {\n      if (error || !response || response.statusCode !== 200) {\n        return resolve(undefined);\n      }\n      try {\n        return resolve(JSON.parse(body).version);\n      } catch (err) {\n      }\n      return resolve(undefined);\n    });  \n  });\n}\n\n\nasync function listenIDECommands(callback) {\n  if (IDECMDS_LISTENER_STATUS > 0) {\n    return;\n  }\n  const sock = new ws(`ws://${HTTP_HOST}:${HTTP_PORT}/wsrpc`, { perMessageDeflate: false });\n  sock.onopen = () => {\n    IDECMDS_LISTENER_STATUS = 1;\n    sock.send(JSON.stringify(jsonrpc.request(Math.random().toString(), 'ide.listen_commands')));\n  };\n\n  sock.onclose = () => {\n    IDECMDS_LISTENER_STATUS = 0;\n  };\n\n  sock.onmessage = event => {\n    try {\n      const result = jsonrpc.parse(event.data);\n      switch (result.type) {\n        case 'success':\n          callback(result.payload.result.method, result.payload.result.params);\n          break;\n\n        case 'error':\n          console.error('Errored result: ' + result.payload.toString());\n          break;\n      }\n    } catch (err) {\n      console.error('Invalid RPC message: ' + err.toString());\n    }\n    sock.send(JSON.stringify(jsonrpc.request(Math.random().toString(), 'ide.listen_commands')));\n  };\n}\n\nasync function findFreePort() {\n  let port = HTTP_PORT_BEGIN;\n  let inUse = false;\n  while (port < HTTP_PORT_END) {\n    inUse = await new Promise(resolve => {\n      tcpPortUsed.check(port, HTTP_HOST)\n        .then(result => {\n          resolve(result);\n        }, () => {\n          return resolve(false);\n        });\n    });\n    if (!inUse) {\n      return port;\n    }\n    port++;\n  }\n  return 0;\n}\n\nexport function isServerStarted() {\n  return new Promise(resolve => {\n    tcpPortUsed.check(HTTP_PORT, HTTP_HOST)\n      .then(result => {\n        resolve(result);\n      }, () => {\n        return resolve(false);\n      });\n  });\n}\n\nexport async function ensureServerStarted(options={}) {\n  const maxAttempts = 3;\n  let attemptNums = 0;\n  let lastError = undefined;\n  let _port = 0;\n  while (attemptNums < maxAttempts) {\n    try {\n      return await _ensureServerStarted(options);\n    } catch (err) {\n      lastError = err;\n      console.warn(err);\n      HTTP_PORT = 0;\n      // stop all PIO Home servers\n      _port = HTTP_PORT_BEGIN;\n      while (_port < HTTP_PORT_END) {\n        request.get(`http://${HTTP_HOST}:${_port}?__shutdown__=1`).on('error', () => {});\n        _port++;\n      }\n      await sleep(2000); // wait for 2 secs while server stops\n    }\n    attemptNums++;\n  }\n  reportError(lastError);\n  throw lastError;\n}\n\nasync function _ensureServerStarted(options={}) {\n  if (HTTP_PORT === 0) {\n    HTTP_PORT = await findFreePort();\n  }\n  const params = {\n    host: HTTP_HOST,\n    port: HTTP_PORT\n  };\n  if (!(await isServerStarted())) {\n    await new Promise((resolve, reject) => {\n      runPIOCommand(\n        ['home', '--port', HTTP_PORT, '--no-open'],\n        (code, stdout, stderr) => {\n          if (code !== 0) {\n            HTTP_PORT = 0;\n            return reject(new Error(stderr));\n          }\n        }\n      );\n      tcpPortUsed.waitUntilUsed(HTTP_PORT, 500, SERVER_LAUNCH_TIMEOUT * 1000)\n        .then(() => {\n          resolve(true);\n        }, (err) => {\n          reject(new Error('Could not start PIO Home server: ' + err.toString()));\n        });\n    });\n  }\n  if (options.onIDECommand) {\n    listenIDECommands(options.onIDECommand);\n  }\n  return params;\n}\n\nexport function shutdownServer() {\n  if (!HTTP_PORT) {\n    return;\n  }\n  return request.get(`http://${HTTP_HOST}:${HTTP_PORT}?__shutdown__=1`);\n}\n\nexport function loadState() {\n  const statePath = path.join(getHomeDir(), 'homestate.json');\n  if (!fs.isFileSync(statePath)) {\n    return null;\n  }\n  try {\n    return JSON.parse(fs.readFileSync(statePath, 'utf8'));\n  } catch (err) {\n    console.warn(err);\n    return null;\n  }\n}\n\nexport function showAtStartup(caller) {\n  const state = loadState();\n  return !state || !state.storage || !state.storage.showOnStartup || !state.storage.showOnStartup.hasOwnProperty(caller) || state.storage.showOnStartup[caller];\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__13__;","module.exports = __WEBPACK_EXTERNAL_MODULE__14__;","module.exports = __WEBPACK_EXTERNAL_MODULE__15__;","/**\n * Copyright (c) 2017-present PlatformIO <contact@platformio.org>\n * All rights reserved.\n *\n * This source code is licensed under the license found in the LICENSE file in\n * the root directory of this source tree.\n */\n\nimport fs from 'fs-plus';\nimport ini from 'ini';\nimport path from 'path';\n\nexport class ProjectTasks {\n\n  static ENV_NAME_PREFIX = 'env:';\n\n  static baseTasks = [\n    {\n      name: 'Build',\n      args: ['run']\n    },\n    {\n      name: 'Upload',\n      args: ['run', '--target', 'upload']\n    },\n    {\n      name: 'Clean',\n      args: ['run', '--target', 'clean']\n    },\n    {\n      name: 'Verbose Build',\n      args: ['run', '--verbose']\n    },\n    {\n      name: 'Verbose Upload',\n      args: ['run', '--verbose', '--target', 'upload']\n    },\n    {\n      name: 'Upload and Monitor',\n      args: ['run', '--target', 'upload', '--target', 'monitor'],\n      filter: (data) => !data.platform.includes('riscv_gap')\n    },\n    {\n      name: 'Upload using Programmer',\n      args: ['run', '--target', 'program'],\n      filter: (data) => data.platform.includes('atmelavr')\n    },\n    {\n      name: 'Upload File System image',\n      args: ['run', '--target', 'uploadfs'],\n      filter: (data) => data.platform.includes('espressif') || data.platform.includes('riscv_gap')\n    },\n    {\n      name: 'Monitor',\n      args: ['device', 'monitor']\n    },\n    {\n      name: 'Test',\n      args: ['test']\n    },\n    {\n      name: 'Remote',\n      args: ['remote', 'run', '--target', 'upload']\n    },\n    {\n      name: 'Pre-Debug',\n      description: 'build in debug mode',\n      args: ['debug']\n    },\n  ];\n\n  constructor(projectDir, ide) {\n    this.projectDir = projectDir;\n    this.ide = ide;\n  }\n\n  async getTasks() {\n    if (!this.projectDir) {\n      return [];\n    }\n    const result = [];\n    let projectConf = undefined;\n    try {\n      const content = await new Promise((resolve, reject) => {\n        fs.readFile(\n          path.join(this.projectDir, 'platformio.ini'),\n          'utf-8',\n          (err, data) => err ? reject(err) : resolve(data)\n        );\n      });\n      projectConf = ini.parse(content);\n    } catch (err) {\n      console.warn(`Could not parse \"platformio.ini\" file in ${this.projectDir}`);\n      return result;\n    }\n\n    const projectData = [];\n    for (const section of Object.keys(projectConf)) {\n      const platform = projectConf[section].platform;\n      if (!platform || !section.startsWith(ProjectTasks.ENV_NAME_PREFIX)) {\n        continue;\n      }\n      projectData.push({\n        env: section.slice(ProjectTasks.ENV_NAME_PREFIX.length),\n        platform\n      });\n    }\n\n    // base tasks\n    ProjectTasks.baseTasks.forEach(task => {\n      if (!task.filter || projectData.some(data => task.filter(data))) {\n        result.push(new TaskItem(task.name, task.description, task.args.slice(0)));\n      }\n    });\n\n    // project environment tasks\n    if (projectData.length > 1) {\n      projectData.forEach(data => {\n        ProjectTasks.baseTasks.forEach(task => {\n          if (!task.filter || task.filter(data)) {\n            result.push(new TaskItem(task.name, task.description, [...task.args.slice(0), '--environment', data.env]));\n          }\n        });\n      });\n    }\n\n    // Misc tasks\n    result.push(new TaskItem('Update project libraries', undefined, ['lib', 'update']));\n    result.push(new TaskItem('Rebuild IntelliSense Index', undefined, ['init', '--ide', this.ide]));\n\n    return result;\n  }\n}\n\n\nexport class TaskItem {\n\n  constructor(name, description, args) {\n    this.name = name;\n    this.description = description;\n    this.args = args;\n  }\n\n  get coreTarget() {\n    if (this.args[0] !== 'run') {\n      return this.args[0];\n    }\n    const index = this.args.indexOf('--target');\n    return index !== -1 ? this.args[index + 1] : 'build';\n  }\n\n  get coreEnv() {\n    const index = this.args.indexOf('--environment');\n    return index !== -1 ? this.args[index + 1] : undefined;\n  }\n\n  get id() {\n    let id = this.name;\n    if (this.coreEnv) {\n      id += ` (${this.coreEnv})`;\n    }\n    return id;\n  }\n\n  get title() {\n    return this.description ? `${this.id} [${this.description}]` : this.id;\n  }\n\n  isBuild() {\n    return this.name.startsWith('Build');\n  }\n\n  isClean() {\n    return this.name.startsWith('Clean');\n  }\n\n  isTest() {\n    return this.name.startsWith('Test');\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__17__;","/**\n * Copyright (c) 2017-present PlatformIO <contact@platformio.org>\n * All rights reserved.\n *\n * This source code is licensed under the license found in the LICENSE file in\n * the root directory of this source tree.\n */\n\nimport * as core from '../../core';\nimport * as helpers from '../helpers';\nimport * as misc from '../../misc';\n\nimport BaseStage from './base';\nimport fs from 'fs-plus';\nimport path from 'path';\nimport semver from 'semver';\nimport tmp from 'tmp';\n\n\nexport default class PlatformIOCoreStage extends BaseStage {\n\n  static UPGRADE_PIOCORE_TIMEOUT = 86400 * 7 * 1000; // 7 days\n\n  static pythonVersion = '2.7.13';\n  static pipUrl = 'https://files.pythonhosted.org/packages/45/ae/8a0ad77defb7cc903f09e551d88b443304a9bd6e6f124e75c0fbbf6de8f7/pip-18.1.tar.gz';\n  static virtualenvUrl = 'https://files.pythonhosted.org/packages/4e/8b/75469c270ac544265f0020aa7c4ea925c5284b23e445cf3aa8b99f662690/virtualenv-16.1.0.tar.gz';\n  static pioCoreDevelopUrl = 'https://github.com/platformio/platformio/archive/develop.zip';\n\n  constructor() {\n    super(...arguments);\n    tmp.setGracefulCleanup();\n  }\n\n  get name() {\n    return 'PlatformIO Core';\n  }\n\n  async whereIsPython() {\n    let status = this.params.pythonPrompt.STATUS_TRY_AGAIN;\n    do {\n      const pythonExecutable = await misc.getPythonExecutable(this.params.useBuiltinPIOCore);\n      if (pythonExecutable) {\n        return pythonExecutable;\n      }\n\n      if (process.platform.startsWith('win')) {\n        try {\n          return await this.installPythonForWindows();\n        } catch (err) {\n          console.warn(err);\n        }\n      }\n\n      const result = await this.params.pythonPrompt.prompt();\n      status = result.status;\n      if (status === this.params.pythonPrompt.STATUS_CUSTOMEXE) {\n        return result.pythonExecutable;\n      }\n    } while (status !== this.params.pythonPrompt.STATUS_ABORT);\n\n    this.status = BaseStage.STATUS_FAILED;\n    throw new Error('Can not find Python Interpreter');\n  }\n\n  async installPythonForWindows() {\n    // https://www.python.org/ftp/python/2.7.14/python-2.7.14.msi\n    // https://www.python.org/ftp/python/2.7.14/python-2.7.14.amd64.msi\n    const pythonArch = process.arch === 'x64' ? '.amd64' : '';\n    const msiUrl = `https://www.python.org/ftp/python/${PlatformIOCoreStage.pythonVersion}/python-${PlatformIOCoreStage.pythonVersion}${pythonArch}.msi`;\n    const msiInstaller = await helpers.download(\n      msiUrl,\n      path.join(core.getCacheDir(), path.basename(msiUrl))\n    );\n    const targetDir = path.join(core.getHomeDir(), 'python27');\n    const pythonPath = path.join(targetDir, 'python.exe');\n\n    if (!fs.isFileSync(pythonPath)) {\n      try {\n        await this.installPythonFromWindowsMSI(msiInstaller, targetDir);\n      } catch (err) {\n        console.warn(err);\n        await this.installPythonFromWindowsMSI(msiInstaller, targetDir, true);\n      }\n    }\n\n    // append temporary to system environment\n    process.env.PATH = [targetDir, path.join(targetDir, 'Scripts'), process.env.PATH].join(path.delimiter);\n    process.env.Path = process.env.PATH;\n\n    // install virtualenv\n    return new Promise(resolve => {\n      misc.runCommand(\n        'pip',\n        ['install', 'virtualenv'],\n        () => resolve(pythonPath)\n      );\n    });\n  }\n\n  async installPythonFromWindowsMSI(msiInstaller, targetDir, administrative = false) {\n    const logFile = path.join(core.getCacheDir(), 'python27msi.log');\n    await new Promise((resolve, reject) => {\n      misc.runCommand(\n        'msiexec.exe',\n        [administrative ? '/a' : '/i', `\"${msiInstaller}\"`, '/qn', '/li', `\"${logFile}\"`, `TARGETDIR=\"${targetDir}\"`],\n        (code, stdout, stderr) => {\n          if (code === 0) {\n            return resolve(stdout);\n          } else {\n            if (fs.isFileSync(logFile)) {\n              stderr = fs.readFileSync(logFile).toString();\n            }\n            return reject(new Error(`MSI Python2.7: ${stderr}`));\n          }\n        },\n        {\n          spawnOptions: {\n            shell: true\n          }\n        }\n      );\n    });\n    if (!fs.isFileSync(path.join(targetDir, 'python.exe'))) {\n      throw new Error('Could not install Python 2.7 using MSI');\n    }\n  }\n\n  cleanVirtualEnvDir() {\n    const envDir = core.getEnvDir();\n    if (!fs.isDirectorySync(envDir)) {\n      return true;\n    }\n    try {\n      fs.removeSync(envDir);\n      return true;\n    } catch (err) {\n      console.warn(err);\n      return false;\n    }\n  }\n\n  isCondaInstalled() {\n    return new Promise(resolve => {\n      misc.runCommand('conda', ['--version'], code => resolve(code === 0));\n    });\n  }\n\n  createVirtualenvWithConda() {\n    this.cleanVirtualEnvDir();\n    return new Promise((resolve, reject) => {\n      misc.runCommand(\n        'conda',\n        ['create', '--yes', '--quiet', 'python=2', 'pip', '--prefix', core.getEnvDir()],\n        (code, stdout, stderr) => {\n          if (code === 0) {\n            return resolve(stdout);\n          } else {\n            return reject(new Error(`Conda Virtualenv: ${stderr}`));\n          }\n        }\n      );\n    });\n  }\n\n  async createVirtualenvWithLocal() {\n    let result = undefined;\n    this.cleanVirtualEnvDir();\n    const pythonExecutable = await this.whereIsPython();\n    try {\n      result = await new Promise((resolve, reject) => {\n        misc.runCommand(\n          pythonExecutable,\n          ['-m', 'virtualenv', '-p', pythonExecutable, core.getEnvDir()],\n          (code, stdout, stderr) => {\n            if (code === 0) {\n              return resolve(stdout);\n            } else {\n              return reject(new Error(`User's Virtualenv: ${stderr}`));\n            }\n          }\n        );\n      });\n    } catch (err) {\n      this.cleanVirtualEnvDir();\n      result = await new Promise((resolve, reject) => {\n        misc.runCommand(\n          'virtualenv',\n          ['-p', pythonExecutable, core.getEnvDir()],\n          (code, stdout, stderr) => {\n            if (code === 0) {\n              return resolve(stdout);\n            } else {\n              return reject(new Error(`User's Virtualenv: ${stderr}`));\n            }\n          }\n        );\n      });\n    }\n    return result;\n  }\n\n  async createVirtualenvWithDownload() {\n    this.cleanVirtualEnvDir();\n    const archivePath = await helpers.download(\n      PlatformIOCoreStage.virtualenvUrl,\n      path.join(core.getCacheDir(), 'virtualenv.tar.gz')\n    );\n    const tmpDir = tmp.dirSync({\n      dir: core.getCacheDir(),\n      unsafeCleanup: true\n    }).name;\n    const dstDir = await helpers.extractTarGz(archivePath, tmpDir);\n    const virtualenvScript = fs.listTreeSync(dstDir).find(\n      item => path.basename(item) === 'virtualenv.py');\n    if (!virtualenvScript) {\n      throw new Error('Can not find virtualenv.py script');\n    }\n    const pythonExecutable = await this.whereIsPython();\n    return new Promise((resolve, reject) => {\n      misc.runCommand(\n        pythonExecutable,\n        [virtualenvScript, core.getEnvDir()],\n        (code, stdout, stderr) => {\n          try {\n            fs.removeSync(tmpDir);\n          } catch (err) {\n            console.warn(err);\n          }\n          if (code === 0) {\n            return resolve(stdout);\n          } else {\n            let userNotification = `Virtualenv Create: ${stderr}\\n${stdout}`;\n            if (stderr.includes('WindowsError: [Error 5]')) {\n              userNotification = `If you use Antivirus, it can block PlatformIO Installer. Try to disable it for a while.\\n\\n${userNotification}`;\n            }\n            return reject(new Error(userNotification));\n          }\n        }\n      );\n    });\n  }\n\n  async installVirtualenvPackage() {\n    const pythonExecutable = await this.whereIsPython();\n    return new Promise((resolve, reject) => {\n      misc.runCommand(\n        pythonExecutable,\n        ['-m', 'pip', 'install', 'virtualenv'],\n        (code, stdout, stderr) => {\n          if (code === 0) {\n            return resolve(stdout);\n          } else {\n            return reject(new Error(`Install Virtualenv globally: ${stderr}`));\n          }\n        }\n      );\n    });\n  }\n\n  async createVirtualenv() {\n    if (await this.isCondaInstalled()) {\n      return await this.createVirtualenvWithConda();\n    }\n    try {\n      await this.createVirtualenvWithLocal();\n    } catch (err) {\n      console.warn(err);\n      try {\n        await this.createVirtualenvWithDownload();\n      } catch (errDl) {\n        console.warn(errDl);\n        try {\n          await this.installVirtualenvPackage();\n          await this.createVirtualenvWithLocal();\n        } catch (errPkg) {\n          misc.reportError(errDl);\n          console.warn(errPkg);\n          throw new Error(`Could not create PIO Core Virtual Environment. Please create it manually -> http://bit.ly/pio-core-virtualenv \\n ${errDl.toString()}`);\n        }\n      }\n    }\n  }\n\n  async upgradePIP(pythonExecutable) {\n    // we use manual downloading to resolve SSL issue with old `pip`\n    const pipArchive = await helpers.download(\n      PlatformIOCoreStage.pipUrl,\n      path.join(core.getCacheDir(), path.basename(PlatformIOCoreStage.pipUrl))\n    );\n    return new Promise((resolve, reject) => {\n      misc.runCommand(pythonExecutable, ['-m', 'pip', 'install', '-U', pipArchive], (code, stdout, stderr) => {\n        return code === 0 ? resolve(stdout) : reject(stderr);\n      });\n    });\n  }\n\n  async installPIOCore() {\n    const pythonExecutable = await this.whereIsPython();\n\n    // Try to upgrade PIP to the latest version with updated openSSL\n    try {\n      await this.upgradePIP(pythonExecutable);\n    } catch (err) {\n      console.warn(err);\n      misc.reportError(new Error(`Upgrade PIP: ${err.toString()}`));\n    }\n\n    // Install dependencies\n    const args = ['-m', 'pip', 'install', '-U'];\n    if (this.params.useDevelopmentPIOCore) {\n      args.push(PlatformIOCoreStage.pioCoreDevelopUrl);\n    } else {\n      args.push('platformio');\n    }\n    return new Promise((resolve, reject) => {\n      misc.runCommand(pythonExecutable, args, (code, stdout, stderr) => {\n        if (code === 0) {\n          resolve(stdout);\n        } else {\n          if (misc.IS_WINDOWS) {\n            stderr = `If you have antivirus/firewall/defender software in a system, try to disable it for a while. \\n ${stderr}`;\n          }\n          return reject(new Error(`PIP Core: ${stderr}`));\n        }\n      });\n    });\n  }\n\n  installPIOHome() {\n    return new Promise(resolve => {\n      core.runPIOCommand(\n        ['home', '--host', '__do_not_start__'],\n        (code, stdout, stderr) => {\n          if (code !== 0) {\n            console.warn(stdout, stderr);\n          }\n          return resolve(true);\n        }\n      );\n    });\n  }\n\n  initState() {\n    let state = this.state;\n    if (!state || !state.hasOwnProperty('pioCoreChecked') || !state.hasOwnProperty('lastIDEVersion')) {\n      state = {\n        pioCoreChecked: 0,\n        lastIDEVersion: null\n      };\n    }\n    return state;\n  }\n\n  async autoUpgradePIOCore(currentCoreVersion) {\n    const newState = this.initState();\n    const now = new Date().getTime();\n    if (\n      (process.env.PLATFORMIO_IDE && newState.lastIDEVersion && newState.lastIDEVersion !== process.env.PLATFORMIO_IDE)\n      || ((now - PlatformIOCoreStage.UPGRADE_PIOCORE_TIMEOUT) > parseInt(newState.pioCoreChecked))\n    ) {\n      newState.pioCoreChecked = now;\n      // PIO Core\n      await new Promise(resolve => {\n        core.runPIOCommand(\n          ['upgrade', ...(this.params.useDevelopmentPIOCore && !semver.prerelease(currentCoreVersion) ? ['--dev'] : [])],\n          (code, stdout, stderr) => {\n            if (code !== 0) {\n              console.warn(stdout, stderr);\n            }\n            resolve(true);\n          }\n        );\n      });\n    }\n    newState.lastIDEVersion = process.env.PLATFORMIO_IDE;\n    this.state = newState;\n  }\n\n  async check() {\n    const coreVersion = helpers.PEPverToSemver(await core.getVersion());\n\n    if (this.params.useBuiltinPIOCore) {\n      if (!fs.isDirectorySync(core.getEnvBinDir())) {\n        throw new Error('Virtual environment is not created');\n      }\n      else if (semver.lt(coreVersion, '3.5.0-rc.4')) {\n        throw new Error('Force new python environment');\n      }\n      try {\n        await this.autoUpgradePIOCore(coreVersion);\n      } catch (err) {\n        console.warn(err);\n      }\n    }\n\n    if (semver.lt(coreVersion, this.params.pioCoreMinVersion)) {\n      this.params.setUseBuiltinPIOCore(true);\n      this.params.useBuiltinPIOCore = true;\n      this.params.useDevelopmentPIOCore = this.params.useDevelopmentPIOCore || semver.prerelease(this.params.pioCoreMinVersion);\n      throw new Error(`Incompatible PIO Core ${coreVersion}`);\n    }\n\n    this.status = BaseStage.STATUS_SUCCESSED;\n    console.info(`Found PIO Core ${coreVersion}`);\n    return true;\n  }\n\n  async install() {\n    if (this.status === BaseStage.STATUS_SUCCESSED) {\n      return true;\n    }\n    if (!this.params.useBuiltinPIOCore) {\n      this.status = BaseStage.STATUS_SUCCESSED;\n      return true;\n    }\n    this.status = BaseStage.STATUS_INSTALLING;\n\n    try {\n      await this.createVirtualenv();\n      await this.installPIOCore();\n      await this.installPIOHome();\n    } catch (err) {\n      misc.reportError(err);\n      throw err;\n    }\n\n    this.status = BaseStage.STATUS_SUCCESSED;\n    return true;\n  }\n\n}\n","/**\n * Copyright (c) 2017-present PlatformIO <contact@platformio.org>\n * All rights reserved.\n *\n * This source code is licensed under the license found in the LICENSE file in\n * the root directory of this source tree.\n */\n\nimport fs from 'fs-plus';\nimport request from 'request';\nimport { runCommand } from '../misc';\nimport tar from 'tar';\nimport zlib from 'zlib';\n\n\nexport async function download(source, target, retries = 3) {\n  const contentLength = await getContentLength(source);\n\n  if (fileExistsAndSizeMatches(target, contentLength)) {\n    return target;\n  }\n\n  let lastError = '';\n  while (retries >= 0) {\n    try {\n      await _download(source, target);\n      if (fileExistsAndSizeMatches(target, contentLength)) {\n        return target;\n      }\n    } catch (err) {\n      lastError = err;\n      console.warn(err);\n    }\n    retries--;\n  }\n\n  throw new Error(`Failed to download file ${source}: ${lastError}`);\n}\n\nfunction fileExistsAndSizeMatches(target, contentLength) {\n  if (fs.isFileSync(target)) {\n    if (contentLength > 0 && contentLength == fs.getSizeSync(target)) {\n      return true;\n    }\n    try {\n      fs.removeSync(target);\n    } catch (err) {\n      console.warn(err);\n    }\n  }\n  return false;\n}\n\nasync function _download(source, target) {\n  let proxy = null;\n  try {\n    const apmPath = atom.packages.getApmPath();\n    proxy = await new Promise((resolve, reject) => {\n      runCommand(\n        apmPath,\n        ['--no-color', 'config', 'get', 'https-proxy'],\n        (code, stdout) => {\n          if (code !== 0) {\n            return reject(null);\n          }\n          resolve(stdout.trim() === 'null' ? null : stdout.trim());\n        }\n      );\n    });\n  } catch (err) {\n    proxy = (process.env.HTTPS_PROXY && process.env.HTTPS_PROXY.trim()\n    || process.env.HTTP_PROXY && process.env.HTTP_PROXY.trim());\n  }\n  return new Promise((resolve, reject) => {\n    const file = fs.createWriteStream(target);\n    const options = {\n      url: source,\n    };\n    if (proxy) {\n      options.proxy = proxy;\n    }\n    request.get(options)\n      .on('error', err => reject(err))\n      .pipe(file);\n    file.on('error', err => reject(err));\n    file.on('finish', () => resolve(target));\n  });\n}\n\nfunction getContentLength(url) {\n  return new Promise(resolve => {\n    request.head({\n      url\n    }, (err, response) => {\n      if (err || response.statusCode !== 200 || !response.headers.hasOwnProperty('content-length')) {\n        resolve(-1);\n      }\n      resolve(parseInt(response.headers['content-length']));\n    });\n  });\n}\n\nexport function extractTarGz(source, destination) {\n  return new Promise((resolve, reject) => {\n    fs.createReadStream(source)\n      .pipe(zlib.createGunzip())\n      .on('error', err => reject(err))\n      .pipe(tar.extract({\n        cwd: destination\n      }))\n      .on('error', err => reject(err))\n      .on('close', () => resolve(destination));\n  });\n}\n\nexport function PEPverToSemver(pepver) {\n  return pepver.replace(/(\\.\\d+)\\.?(dev|a|b|rc|post)/, '$1-$2.');\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__20__;","module.exports = require(\"zlib\");","module.exports = __WEBPACK_EXTERNAL_MODULE__22__;","/**\n * Copyright (c) 2017-present PlatformIO <contact@platformio.org>\n * All rights reserved.\n *\n * This source code is licensed under the license found in the LICENSE file in\n * the root directory of this source tree.\n */\n\nimport ProjectIndexer from './indexer';\nimport { disposeSubscriptions } from '../misc';\n\nexport default class ProjectObserver {\n\n  constructor(options) {\n    this.options = options;\n    this._indexers = [];\n  }\n\n  async update(projectDirs) {\n    // remove non-existing\n    this._indexers = this._indexers.filter(item => {\n      if (projectDirs.includes(item.projectDir)) {\n        return true;\n      }\n      item.dispose();\n      return false;\n    });\n\n    for (const projectDir of projectDirs) {\n      if (this._indexers.some(item => item.projectDir === projectDir)) {\n        continue;\n      }\n      const indexer = new ProjectIndexer(projectDir, this.options);\n      this._indexers.push(indexer);\n      await indexer.rebuild();\n    }\n  }\n\n  rebuildIndex() {\n    this._indexers.forEach(item => item.rebuild());\n  }\n\n  dispose() {\n    disposeSubscriptions(this._indexers);\n  }\n\n}\n"],"sourceRoot":""}