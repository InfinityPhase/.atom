{"version":3,"sources":["webpack://platformio-node-helpers/webpack/universalModuleDefinition","webpack://platformio-node-helpers/webpack/bootstrap","webpack://platformio-node-helpers/./src/misc.js","webpack://platformio-node-helpers/external \"path\"","webpack://platformio-node-helpers/./src/core.js","webpack://platformio-node-helpers/external \"fs-plus\"","webpack://platformio-node-helpers/external \"request\"","webpack://platformio-node-helpers/external \"fs\"","webpack://platformio-node-helpers/external \"os\"","webpack://platformio-node-helpers/external \"querystringify\"","webpack://platformio-node-helpers/external \"tmp\"","webpack://platformio-node-helpers/./src/home.js","webpack://platformio-node-helpers/./src/installer/helpers.js","webpack://platformio-node-helpers/external \"semver\"","webpack://platformio-node-helpers/./src/installer/stages/base.js","webpack://platformio-node-helpers/./src/project/indexer.js","webpack://platformio-node-helpers/./src/index.js","webpack://platformio-node-helpers/external \"cross-spawn\"","webpack://platformio-node-helpers/external \"tar\"","webpack://platformio-node-helpers/external \"zlib\"","webpack://platformio-node-helpers/external \"jsonrpc-lite\"","webpack://platformio-node-helpers/external \"tcp-port-used\"","webpack://platformio-node-helpers/external \"ws\"","webpack://platformio-node-helpers/./src/project/tasks.js","webpack://platformio-node-helpers/./src/project/config.js","webpack://platformio-node-helpers/external \"glob\"","webpack://platformio-node-helpers/./src/installer/stages/platformio-core.js","webpack://platformio-node-helpers/./src/project/observer.js"],"names":["root","factory","exports","module","require","define","amd","global","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__7__","__WEBPACK_EXTERNAL_MODULE__8__","__WEBPACK_EXTERNAL_MODULE__11__","__WEBPACK_EXTERNAL_MODULE__15__","__WEBPACK_EXTERNAL_MODULE__16__","__WEBPACK_EXTERNAL_MODULE__18__","__WEBPACK_EXTERNAL_MODULE__19__","__WEBPACK_EXTERNAL_MODULE__20__","__WEBPACK_EXTERNAL_MODULE__23__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","sleep","ms","Promise","resolve","setTimeout","patchOSEnviron","caller","useBuiltinPIOCore","extraPath","extraVars","process","env","PLATFORMIO_CALLER","platform","LC_ALL","PLATFORMIO_DISABLE_PROGRESSBAR","keys","forEach","Path","PATH","path","delimiter","getEnvBinDir","getEnvDir","join","split","filter","includes","reWindowsEnvVar","IS_WINDOWS","test","replace","_","envvar","NO_PROXY","runCommand","processHTTPRequest","url","callback","options","headers","console","info","err","response","body","getPythonExecutable","async","customDirs","exenames","locations","push","getCoreDir","item","checkScriptPath","getCacheDir","fs","writeFile","CHECK_PYTHON_SCRIPT","error","location","exename","executable","normalize","existsSync","_isCompatiblePython","getErrorReportUrl","title","description","errorToUrls","qs","stringify","labels","isPIOProject","dir","fsPlus","isFileSync","arrayRemove","array","element","splice","indexOf","disposeSubscriptions","subscriptions","length","pop","dispose","reportError","data","v","tid","cid","uuid","aid","av","PACKAGE_VERSION","an","os","type","release","arch","exd","toString","exf","request","post","startsWith","cmd","args","outputLines","errorLines","completed","tmpDir","spawnOptions","cwd","isDirectorySync","some","basename","tmpEnv","assign","tmp","dirSync","unsafeCleanup","TMPDIR","TEMP","TMP","child","stdout","on","line","stderr","onExit","code","removeSync","warn","map","x","s4","Math","floor","random","substring","makeTreeSync","getVersion","reject","trim","match","Error","runPIOCommand","baseArgs","userHomeDir","HOME","USERPROFILE","HOMEPATH","HOMEDRIVE","coreDir","PLATFORMIO_CORE_DIR","PLATFORMIO_HOME_DIR","coreDirPathFormat","parse","rootDir","format","base","char","charCodeAt","getFrontendUri","serverHost","serverPort","stateStorage","loadState","storage","params","start","theme","workspace","sid","SESSION_ID","undefined","getFrontendVersion","isServerStarted","ensureServerStarted","attemptNums","lastError","_ensureServerStarted","HTTP_PORT","shutdownAllServers","shutdownServer","HTTP_HOST","showAtStartup","state","showOnStartup","SERVER_LAUNCH_TIMEOUT","SERVER_AUTOSHUTDOWN_TIMEOUT","HTTP_PORT_BEGIN","HTTP_PORT_END","round","IDECMDS_LISTENER_STATUS","statusCode","JSON","version","isPortUsed","host","port","tcpPortUsed","check","then","result","findFreePort","waitUntilUsed","onIDECommand","coreVersion","coreVersionMsgId","sock","ws","perMessageDeflate","onopen","send","jsonrpc","onclose","onmessage","event","payload","id","PEPverToSemver","method","semver","gte","listenIDECommands","statePath","readFileSync","download","source","target","retries","contentLength","head","parseInt","fileExistsAndSizeMatches","_download","extractTarGz","destination","createReadStream","pipe","zlib","createGunzip","tar","extract","pepver","getSizeSync","proxy","apmPath","atom","packages","getApmPath","HTTPS_PROXY","HTTP_PROXY","file","createWriteStream","BaseStage","onStatusChange","this","_status","STATUS_CHECKING","status","toLocaleLowerCase","getValue","stateKey","setValue","ProjectIndexer","projectDir","dirWatchSubscriptions","_rebuildTimeout","_updateDirWatchersTimeout","_inProgress","setupWatchers","clearTimeout","rebuild","AUTO_REBUILD_DELAY","withProgress","ide","watcher","createFileSystemWatcher","onDidCreate","requestRebuild","requestUpdateDirWatchers","onDidChange","onDidDelete","updateDirWatchers","fetchWatchDirs","createDirSystemWatcher","PythonExecutable","scriptLines","core","home","misc","installer","PlatformIOCoreStage","project","ProjectObserver","ProjectTasks","TaskItem","projectEnvs","prevCWD","chdir","config","ProjectConfig","envs","baseTasks","task","slice","multienv","index","coreEnv","_parsed","_data","read","items","section","option","reLines","reComment","mSection","reSection","mOptionValue","reOptionValue","mMultiLineValue","reMultiLineValue","getlist","pattern","glob","sync","reInterpolation","_reInterpolationHandler","sections","default_","getraw","parse_multi_values","helpers","arguments","setGracefulCleanup","_skipPIPInstalling","pythonPrompt","STATUS_TRY_AGAIN","pythonExecutable","installPythonForWindows","prompt","STATUS_CUSTOMEXE","STATUS_ABORT","STATUS_FAILED","pythonArch","installerUrl","pythonVersion","targetDir","pythonPath","installPythonFromWindowsInstaller","logPath","shell","envDir","cleanVirtualEnvDir","whereIsPython","venvCmdOptions","cmdOptions","archivePath","virtualenvUrl","dstDir","virtualenvScript","listTreeSync","find","userNotification","isCondaInstalled","createVirtualenvWithConda","createVirtualenvWithLocal","createVirtualenvWithDownload","errDl","installVirtualenvPackage","errPkg","writeFileSync","getPipScript","getPipUrl","installPIP","useDevelopmentPIOCore","pioCoreDevelopUrl","pioCoreChecked","lastIDEVersion","currentCoreVersion","newState","initState","now","Date","getTime","PLATFORMIO_IDE","UPGRADE_PIOCORE_TIMEOUT","prerelease","lockPath","PENV_LOCK_FILE_NAME","PENV_LOCK_VERSION","checkPenvLocked","autoUpgradePIOCore","lt","pioCoreMinVersion","setUseBuiltinPIOCore","STATUS_SUCCESSED","STATUS_INSTALLING","createVirtualenv","lockPenvDir","installPIOCore","installPIOHome","_indexers","projectDirs","indexer"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,EAAQG,QAAQ,WAAYA,QAAQ,WAAYA,QAAQ,kBAAmBA,QAAQ,OAAQA,QAAQ,UAAWA,QAAQ,eAAgBA,QAAQ,OAAQA,QAAQ,gBAAiBA,QAAQ,iBAAkBA,QAAQ,MAAOA,QAAQ,SACxN,mBAAXC,QAAyBA,OAAOC,IAC9CD,OAAO,0BAA2B,CAAC,UAAW,UAAW,iBAAkB,MAAO,SAAU,cAAe,MAAO,eAAgB,gBAAiB,KAAM,QAASJ,GACxI,iBAAZC,QACdA,QAAQ,2BAA6BD,EAAQG,QAAQ,WAAYA,QAAQ,WAAYA,QAAQ,kBAAmBA,QAAQ,OAAQA,QAAQ,UAAWA,QAAQ,eAAgBA,QAAQ,OAAQA,QAAQ,gBAAiBA,QAAQ,iBAAkBA,QAAQ,MAAOA,QAAQ,SAErQJ,EAAK,2BAA6BC,EAAQD,EAAK,WAAYA,EAAc,QAAGA,EAAqB,eAAGA,EAAU,IAAGA,EAAa,OAAGA,EAAK,eAAgBA,EAAU,IAAGA,EAAK,gBAAiBA,EAAK,iBAAkBA,EAAS,GAAGA,EAAW,MARzO,CASGO,QAAQ,SAASC,EAAgCC,EAAgCC,EAAgCC,EAAgCC,EAAiCC,EAAiCC,EAAiCC,EAAiCC,EAAiCC,EAAiCC,GAC1V,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUnB,QAGnC,IAAIC,EAASgB,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHrB,QAAS,IAUV,OANAsB,EAAQH,GAAUI,KAAKtB,EAAOD,QAASC,EAAQA,EAAOD,QAASkB,GAG/DjB,EAAOoB,GAAI,EAGJpB,EAAOD,QA0Df,OArDAkB,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAAS1B,EAAS2B,EAAMC,GAC3CV,EAAoBW,EAAE7B,EAAS2B,IAClCG,OAAOC,eAAe/B,EAAS2B,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAASlC,GACX,oBAAXmC,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAe/B,EAASmC,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAe/B,EAAS,aAAc,CAAEqC,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAS5C,GAChC,IAAI2B,EAAS3B,GAAUA,EAAOuC,WAC7B,WAAwB,OAAOvC,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAiB,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,I,sGC2BrCC,MAAT,SAAeC,GACpB,OAAO,IAAIC,QAAQC,GAAWC,WAAWD,EAASF,K,EAGpCI,eAAT,UAAwB,OAC7BC,EAD6B,kBAE7BC,GAAoB,EAFS,UAG7BC,EAH6B,UAI7BC,IAEAC,QAAQC,IAAIC,kBAAoBN,EAEP,WAArBI,QAAQG,WACVH,QAAQC,IAAIG,OAAS,eAER,SAAXR,IACFI,QAAQC,IAAII,+BAAiC,QAG3CN,GACF/B,OAAOsC,KAAKP,GAAWQ,QAAQ1C,GAASmC,QAAQC,IAAIpC,GAAQkC,EAAUlC,IAIpEmC,QAAQC,IAAIO,OACVR,QAAQC,IAAIQ,KACdT,QAAQC,IAAIQ,MAAQC,UAAKC,UAAYX,QAAQC,IAAIO,KAEjDR,QAAQC,IAAIQ,KAAOT,QAAQC,IAAIO,MAMjCR,QAAQC,IAAIQ,KAFVZ,EAEiB,EAAC,IAAAe,iBAAgB,IAAAC,aAAab,QAAQC,IAAIQ,MAAMK,KACjEJ,UAAKC,WAIYX,QAAQC,IAAIQ,KAAKM,MAAML,UAAKC,WAC5CK,OAAO5B,IAAMA,EAAE6B,UAAS,IAAAJ,eACxBC,KAAKJ,UAAKC,WAGXb,IAAcE,QAAQC,IAAIQ,KAAKQ,SAASnB,KAC1CE,QAAQC,IAAIQ,KAAO,CAACX,EAAWE,QAAQC,IAAIQ,MAAMK,KAAKJ,UAAKC,YAI7D,MAAMO,EAAkB,gBACxB,KAAOC,GAAcD,EAAgBE,KAAKpB,QAAQC,IAAIQ,OACpDT,QAAQC,IAAIQ,KAAOT,QAAQC,IAAIQ,KAAKY,QAAQH,EAAiB,CAACI,EAAGC,IACxDvB,QAAQC,IAAIsB,IAAW,IAK9BvB,QAAQC,IAAIO,OACdR,QAAQC,IAAIO,KAAOR,QAAQC,IAAIQ,MAIjCT,QAAQC,IAAIuB,SACV,aAAexB,QAAQC,IAAIuB,SAAY,IAAGxB,QAAQC,IAAIuB,WAAa,K,EAGvDC,a,EA8DAC,mBAAT,SAA4BC,EAAKC,EAAUC,IAChDA,EAAUA,GAAW,IACbF,IAAMA,EACTE,EAAQC,UACXD,EAAQC,QAAU,CAChB,aAAc,eAIlB,OADAC,QAAQC,KAAK,qBAAsBH,IAC5B,aAAQA,EAAS,CAACI,EAAKC,EAAUC,IAC/BP,EAASK,EAAKC,EAAUC,K,EAIbC,oBAAfC,eACLxC,GAAoB,EACpByC,GAEA,MAAMC,EAAWpB,EAAa,CAAC,cAAgB,CAAC,UAAW,SAAU,WAC/DqB,EAAYF,GAAc,GAE5BzC,IACF2C,EAAUC,MAAK,IAAA7B,iBACf4B,EAAUC,MAAK,IAAA5B,eAEbM,GAEFqB,EAAUC,KAAK/B,UAAKI,MAAK,IAAA4B,cAAc,aAGzC1C,QAAQC,IAAIQ,KAAKM,MAAML,UAAKC,WAAWJ,QAAQoC,IACxCH,EAAUvB,SAAS0B,IACtBH,EAAUC,KAAKE,KAInB,MAAMC,EAAkBlC,UAAKI,MAAK,IAAA+B,eAAe,mBACjDC,UAAGC,UAAUH,EAAiBI,EAAqBf,IAC7CA,GACFF,QAAQkB,MAAMhB,KAIlB,IAAK,MAAMiB,KAAYV,EACrB,IAAK,MAAMW,KAAWZ,EAAU,CAC9B,MAAMa,EAAa1C,UAAK2C,UAAU3C,UAAKI,KAAKoC,EAAUC,IAAU9B,QAAQ,KAAM,IAC9E,GACEyB,UAAGQ,WAAWF,UACPG,EAAoBH,EAAYR,GAEvC,OAAOQ,EAIb,Q,EAecI,kBAAT,SAA2BC,EAAOC,GACvC,MAAMC,EAAc,CAClB,CACE,yBACA,mEAEF,CACE,0BACA,kEAEF,CACE,kDACA,kEAEF,CACE,0BACA,kEAEF,CACE,mBACA,kEAEF,CACE,kDACA,mEAGJ,IAAK,MAAMhB,KAAQgB,EACjB,GAAID,EAAYzC,SAAS0B,EAAK,IAC5B,OAAOA,EAAK,GAGhB,MAAQ,4CAA2C3C,QAAQC,IAAIC,mBAC7D,2BAA2B0D,UAAGC,UAAU,CACxCJ,QACAtB,KAAMuB,EACNI,OAAQ,Y,EAIIC,aAAT,SAAsBC,GAC3B,OAAOC,UAAOC,WAAWxD,UAAKI,KAAKkD,EAAK,oB,EAG1BG,YAAT,SAAqBC,EAAOC,GACjC,OAAOD,EAAME,OAAOF,EAAMG,QAAQF,GAAU,I,EAG9BG,qBAAT,SAA8BC,GACnC,KAAOA,EAAcC,QACnBD,EAAcE,MAAMC,W,EAYRC,YAAT,SAAqB5C,GAC1B,MAAM6C,EAAO,CACXC,EAAG,EACHC,IAAK,gBACLC,IAAKC,IACLC,IAAK,eACLC,GAAIC,QACJC,GAAK,GAAEC,UAAGC,WAAWD,UAAGE,cAAcF,UAAGG,SACzClH,EAAG,YACHmH,IAAK1D,EAAI2D,WACTC,IAAK,GAEH7F,QAAQC,IAAIC,oBACd4E,EAAI,IAAU9E,QAAQC,IAAIC,mBAE5B4F,UAAQC,KAAK,2CAA4C,CACvD5D,KAAMyB,UAAGC,UAAUiB,MAxXvB,W,IAEA,M,IACA,M,IACA,M,IACA,M,IACA,M,IACA,M,IACA,O,IACA,M,mDAEA,MAAM9B,EAAuB,sxDAwFhB7B,EAAa,EAAbA,WAAanB,QAAQG,SAAS6F,WAAW,OAoE/C,SAASvE,EAAWwE,EAAKC,EAAMtE,EAAsBC,EAAU,IACpEE,QAAQC,KAAK,aAAciE,EAAKC,EAAMrE,GACtC,MAAMsE,EAAc,GACdC,EAAa,GACnB,IAAIC,GAAY,EACZC,EAAS,KAOb,GALAzE,EAAQ0E,aAAe1E,EAAQ0E,cAAgB,IAC1C1E,EAAQ0E,aAAaC,KAAOvC,UAAOwC,iBAAgB,IAAA7F,mBACtDiB,EAAQ0E,aAAaC,KAAM,IAAA5F,iBAI3BO,GACA,CAAC,MAAO,cAAcuF,KAAK/D,GAAQ,CAACjC,UAAKiG,SAASV,MAASC,GAAMjF,SAAS0B,IAC1E,CAEA,MAAMiE,EAAS5I,OAAO6I,OAAO,GAAI7G,QAAQC,KACzCqG,EAASQ,UAAIC,QAAQ,CACnB/C,KAAK,IAAAnB,eACLmE,eAAe,IACdnJ,KACH+I,EAAOK,OAASL,EAAOM,KAAON,EAAOO,IAAMb,EAC3CzE,EAAQ0E,aAAatG,IAAM2G,EAC3B/E,EAAQ0E,aAAaC,IAAMF,EAG7B,IACE,MAAMc,GAAQ,aAAMnB,EAAKC,EAAMrE,EAAQ0E,cAEvCa,EAAMC,OAAOC,GAAG,OAAQC,GAAQpB,EAAY1D,KAAK8E,IACjDH,EAAMI,OAAOF,GAAG,OAAQC,GAAQnB,EAAW3D,KAAK8E,IAChDH,EAAME,GAAG,QAASG,GAClBL,EAAME,GAAG,QAASrF,IAChBmE,EAAW3D,KAAKR,EAAI2D,YACpB6B,GAAQ,KAEV,MAAOxF,GACPmE,EAAW3D,KAAKR,EAAI2D,YACpB6B,GAAQ,GAGV,SAASA,EAAOC,GACd,GAAIrB,IAAczE,EAChB,OAIF,GAFAyE,GAAY,EAERC,EACF,IACErC,UAAO0D,WAAWrB,GAClB,MAAOrE,GACPF,QAAQ6F,KAAK3F,GAIjB,MAAMoF,EAASlB,EAAY0B,IAAIC,GAAKA,EAAElC,YAAY9E,KAAK,IACjD0G,EAASpB,EAAWyB,IAAIC,GAAKA,EAAElC,YAAY9E,KAAK,IACtDc,EAAS8F,EAAML,EAAQG,IA6D3B,SAASjE,EAAoBH,EAAYR,GACvC,OAAO,IAAIpD,QAAQC,IACjBgC,EAAW2B,EAAY,CAACR,GAAkB,CAAC8E,EAAML,EAAQG,KACvDzF,QAAQC,KAAKqF,GACTG,GACFzF,QAAQ6F,KAAKJ,GAEf/H,EAAiB,IAATiI,OA2Dd,SAASxC,IACP,MAAM6C,EAAK,IACTC,KAAKC,MAA4B,OAArB,EAAID,KAAKE,WAClBtC,SAAS,IACTuC,UAAU,GACf,MAAQ,GAAEJ,MAAOA,OAAQA,OAAQA,OAAQA,OAAQA,MAAOA,MAAOA,Q,cC7WjE5L,EAAOD,QAAUE,QAAQ,S,gFCaTsG,a,EAqCA7B,Y,EAOAD,aAAT,WACL,OAAOF,UAAKI,KAAKD,IAAaM,aAAa,UAAY,Q,EAGzC0B,YAAT,WACL,MAAMmB,EAAMtD,UAAKI,KAAK4B,IAAc,UAC/BI,UAAG2D,gBAAgBzC,IACtBlB,UAAGsF,aAAapE,GAElB,OAAOA,G,EAGOqE,WAAT,WACL,OAAO,IAAI7I,QAAQ,CAACC,EAAS6I,MAC3B,IAAA7G,YAAW,aAAc,CAAC,aAAc,CAACiG,EAAML,EAAQG,KACrD,GAAa,IAATE,EACF,IACE,OAAOjI,EAAQ4H,EAAOkB,OAAOC,MAAM,eAAe,IAClD,MAAOvG,GACP,OAAOqG,EAAOrG,EAAI2D,YAGtB,OAAO0C,EAAO,IAAIG,MAAMjB,S,EAKdkB,cAAT,SAAuBxC,EAAMtE,EAAUC,EAAU,IACtD,MAAM8G,EAAW,CAAC,MACd3I,QAAQC,IAAIC,oBACdyI,EAASlG,KAAK,MACdkG,EAASlG,KAAKzC,QAAQC,IAAIC,qBAE5B,IAAAuB,YAAW,aAAc,IAAIkH,KAAazC,GAAOtE,EAAUC,IAlF7D,W,IAEA,M,IACA,M,mDAEO,SAASa,IACd,IAAIkG,EAAc5I,QAAQC,IAAI4I,MAAQ,IAClC1H,eACEnB,QAAQC,IAAI6I,YACdF,EAAc5I,QAAQC,IAAI6I,YACjB9I,QAAQC,IAAI8I,WACrBH,EAAclI,UAAKI,KAAKd,QAAQC,IAAI+I,WAAa,GAAIhJ,QAAQC,IAAI8I,YAGrE,MAAME,EACJjJ,QAAQC,IAAIiJ,qBACZlJ,QAAQC,IAAIkJ,qBACZzI,UAAKI,KAAK8H,EAAa,eACzB,IAAKzH,aACH,OAAO8H,EAET,MAAMG,EAAoB1I,UAAK2I,MAAMJ,GAC/BK,EAAU5I,UAAK6I,OAAO,CAC1BvN,KAAMoN,EAAkBpN,KACxBgI,IAAKoF,EAAkBpN,KACvBwN,KAAM,cACN3L,KAAM,gBAGR,GAAIiF,UAAG2D,gBAAgB6C,GACrB,OAAOA,EAGT,IAAK,MAAMG,KAAQR,EACjB,GAAIQ,EAAKC,WAAW,GAAK,IAEvB,OAAOJ,EAGX,OAAOL,EAGF,SAASpI,IACd,MAAI,wBAAyBb,QAAQC,IAC5BD,QAAQC,IAAR,oBAEFS,UAAKI,KAAK4B,IAAc,U,cCtDjCvG,EAAOD,QAAUM,G,cCAjBL,EAAOD,QAAUO,G,cCAjBN,EAAOD,QAAUE,QAAQ,O,cCAzBD,EAAOD,QAAUE,QAAQ,O,cCAzBD,EAAOD,QAAUQ,G,cCAjBP,EAAOD,QAAUS,G,gFC8BDgN,eAAT,SAAwBC,EAAYC,EAAYhI,GACrD,MAAMiI,GAAgBC,KAAe,IAAIC,SAAW,GAC9CC,EAAS,CACbC,MAAOrI,EAAQqI,OAAS,IACxBC,MAAOL,EAAaK,OAAStI,EAAQsI,MACrCC,UAAWN,EAAaM,WAAavI,EAAQuI,UAC7CC,IAAKC,GAOP,OALAtM,OAAOsC,KAAK2J,GAAQ1J,QAAQ1B,IACtB,MAAC0L,EAAW,MAAMtJ,SAASgJ,EAAOpL,YAC7BoL,EAAOpL,KAGV,UAAS+K,KAAcC,KAAcjG,UAAGC,UAAUoG,M,EAGtCO,qB,EAgGAC,kB,EAOAC,oBAAfrI,eAAmCR,EAAU,IAElD,IAAI8I,EAAc,EACdC,OAAYL,EAChB,KAAOI,EAHa,GAGc,CAChC,IACE,aAAaE,EAAqBhJ,GAClC,MAAOI,GACP2I,EAAY3I,EACZF,QAAQ6F,KAAK3F,GACb6I,EAAY,QAENC,IAERJ,IAGF,MADA,IAAA9F,aAAY+F,GACNA,G,EA6CQI,eAAT,WACL,IAAKF,EACH,OAEF,OAAOhF,UAAQ3H,IAAK,UAAS8M,KAAaH,qB,EAGtBC,qB,EASNhB,Y,EAaAmB,cAAT,SAAuBtL,GAC5B,MAAMuL,EAAQpB,IACd,OACGoB,IACAA,EAAMnB,UACNmB,EAAMnB,QAAQoB,iBACbxL,KAAUuL,EAAMnB,QAAQoB,gBAC1BD,EAAMnB,QAAQoB,cAAcxL,IA/OhC,WACA,OAEA,Q,IACA,M,IACA,O,IACA,M,IACA,M,IACA,M,IACA,O,IACA,O,IACA,O,mDAEA,MAAMyL,EAAwB,IACxBC,EAA8B,KAC9BL,EAAY,YACZM,EAAkB,KAClBC,EAAgB,KAChBlB,EAAatC,KAAKyD,MAAsB,IAAhBzD,KAAKE,UACnC,IAAI4C,EAAY,EACZY,EAA0B,EAkBvBrJ,eAAemI,EAAmBZ,EAAYC,GACnD,aAAa,IAAIrK,QAAQC,KACvB,aAAS,UAASmK,KAAcC,kBAA2B,SACzD5G,EACAf,EACAC,GAEA,GAAIc,IAAUf,GAAoC,MAAxBA,EAASyJ,WACjC,OAAOlM,OAAQ8K,GAEjB,IACE,OAAO9K,EAAQmM,KAAKvC,MAAMlH,GAAM0J,SAChC,MAAO5J,IACT,OAAOxC,OAAQ8K,QAuDrBlI,eAAeyJ,EAAWC,EAAMC,GAC9B,OAAO,IAAIxM,QAAQC,IACjBwM,UAAYC,MAAMF,EAAMD,GAAMI,KAC5BC,GACS3M,EAAQ2M,GAEjB,IACS3M,GAAQ,MAqBhB4C,eAAeoI,IACpB,cAAYqB,EAAWb,EAAWH,YAGlBN,EAAmBS,EAAWH,GAuBhDzI,eAAewI,EAAqBhJ,EAAU,IAC1B,IAAdiJ,IACFA,EAAYjJ,EAAQmK,YA5CxB3J,iBACE,IAAI2J,EAAOT,EACX,KAAOS,EAAOR,GAAe,CAC3B,UAAYM,EAAWb,EAAWe,GAChC,OAAOA,EAGT,SAAUxB,EAAmBS,EAAWe,GACtC,OAAOA,EAETA,IAEF,OAAO,EAgC8BK,IAErC,MAAMpC,EAAS,CACb8B,KAAMd,EACNe,KAAMlB,GAiCR,aA/BYL,WACJ,IAAIjL,QAAQ,CAACC,EAAS6I,MAC1B,IAAAI,eACE,CACE,OACA,SACAoC,EACA,qBACAQ,EACA,aAEF,CAAC5D,EAAML,EAAQG,KACb,GAAa,IAATE,EAEF,OADAoD,EAAY,EACLxC,EAAO,IAAIG,MAAMjB,MAI9ByE,UAAYK,cAAcxB,EAAW,IAA6B,IAAxBO,GAA8Bc,KACtE,KACE1M,GAAQ,IAEVwC,IACEqG,EAAO,IAAIG,MAAM,oCAAsCxG,EAAI2D,iBAK/D/D,EAAQ0K,cA7IdlK,eAAiCT,GAC/B,GAAI8J,EAA0B,EAC5B,OAEF,IAAIc,EAAc,QAClB,MAAMC,EAAmBzE,KAAKE,SAAStC,WACjC8G,EAAO,IAAIC,UAAI,QAAO1B,KAAaH,UAAmB,CAC1D8B,mBAAmB,IAErBF,EAAKG,OAAS,KACZnB,EAA0B,EAC1BgB,EAAKI,KAAKlB,KAAK/H,UAAUkJ,UAAQjH,QAAQ2G,EAAkB,mBAG7DC,EAAKM,QAAU,KACbtB,EAA0B,GAG5BgB,EAAKO,UAAYC,IACf,IACE,MAAMd,EAASW,UAAQ1D,MAAM6D,EAAMpI,MACnC,OAAQsH,EAAO5G,MACb,IAAK,UACC4G,EAAOe,QAAQC,KAAOX,EACxBD,GAAc,IAAAa,gBAAejB,EAAOe,QAAQf,QAE5CxK,EAASwK,EAAOe,QAAQf,OAAOkB,OAAQlB,EAAOe,QAAQf,OAAOnC,QAE/D,MAEF,IAAK,QACHlI,QAAQkB,MAAM,mBAAqBmJ,EAAOe,QAAQvH,aAGtD,MAAO3D,GACPF,QAAQkB,MAAM,wBAA0BhB,EAAI2D,YAG9C,IAAId,EAAO,KAETA,EADEyI,UAAOC,IAAIhB,EAAa,SACnBO,UAAQjH,QAAQkC,KAAKE,SAAStC,WAAY,sBAAuB,CACtE0E,IAGKyC,UAAQjH,QAAQkC,KAAKE,SAAStC,WAAY,uBAEnD8G,EAAKI,KAAKlB,KAAK/H,UAAUiB,KAgGzB2I,CAAkB5L,EAAQ0K,cAErBtC,EAUF5H,eAAe0I,IACpB,IAAIiB,EAAOT,EACX,KAAOS,EAAOR,GACZ1F,UAAQ3H,IAAK,UAAS8M,KAAae,oBAAuB1E,GAAG,QAAS,QACtE0E,UAEI,IAAA1M,OAAM,KAGP,SAASyK,IACd,MAAM2D,EAAYhN,UAAKI,MAAK,IAAA4B,cAAc,kBAC1C,IAAKI,UAAGoB,WAAWwJ,GACjB,OAAO,KAET,IACE,OAAO9B,KAAKvC,MAAMvG,UAAG6K,aAAaD,EAAW,SAC7C,MAAOzL,GAEP,OADAF,QAAQ6F,KAAK3F,GACN,Q,gFC9NW2L,SAAfvL,eAAwBwL,EAAQC,EAAQC,EAAU,GACvD,MAAMC,QA2EkBrM,EA3EqBkM,EA4EtC,IAAIrO,QAAQC,IACjBqG,UAAQmI,KACN,CACEtM,OAEF,CAACM,EAAKC,MAEFD,GACwB,MAAxBC,EAASyJ,YACRzJ,EAASJ,SACTI,EAASJ,QAAQ,mBAElBrC,GAAS,GAEXA,EAAQyO,SAAShM,EAASJ,QAAQ,yBAf1C,IAA0BH,EAzExB,GAAIwM,EAAyBL,EAAQE,GACnC,OAAOF,EAGT,IAAIlD,EAAY,GAChB,KAAOmD,GAAW,GAAG,CACnB,IAEE,SADMK,EAAUP,EAAQC,GACpBK,EAAyBL,EAAQE,GACnC,OAAOF,EAET,MAAO7L,GACP2I,EAAY3I,EACZF,QAAQ6F,KAAK3F,GAEf8L,IAGF,MAAM,IAAItF,MAAO,2BAA0BoF,MAAWjD,M,EA4ExCyD,aAAT,SAAsBR,EAAQS,GACnC,OAAO,IAAI9O,QAAQ,CAACC,EAAS6I,KAC3BxF,UAAGyL,iBAAiBV,GACjBW,KAAKC,UAAKC,gBACVpH,GAAG,QAASrF,GAAOqG,EAAOrG,IAC1BuM,KACCG,UAAIC,QAAQ,CACVpI,IAAK8H,KAGRhH,GAAG,QAASrF,GAAOqG,EAAOrG,IAC1BqF,GAAG,QAAS,IAAM7H,EAAQ6O,O,EAIjBjB,eAAT,SAAwBwB,GAC7B,OAAOA,EAAOxN,QAAQ,8BAA+B,WAvHvD,I,IAAA,M,IACA,MACA,O,IACA,O,IACA,O,mDA0BA,SAAS8M,EAAyBL,EAAQE,GACxC,GAAIlL,UAAGoB,WAAW4J,GAAS,CACzB,GAAIE,EAAgB,GAAKA,GAAiBlL,UAAGgM,YAAYhB,GACvD,OAAO,EAET,IACEhL,UAAG6E,WAAWmG,GACd,MAAO7L,GACPF,QAAQ6F,KAAK3F,IAGjB,OAAO,EAGTI,eAAe+L,EAAUP,EAAQC,GAC/B,IAAIiB,EAAQ,KACZ,IACE,MAAMC,EAAUC,KAAKC,SAASC,aAC9BJ,QAAc,IAAIvP,QAAQ,CAACC,EAAS6I,MAClC,IAAA7G,YACEuN,EACA,CAAC,aAAc,SAAU,MAAO,eAChC,CAACtH,EAAML,KACL,GAAa,IAATK,EACF,OAAOY,EAAO,MAEhB7I,EAA0B,SAAlB4H,EAAOkB,OAAoB,KAAOlB,EAAOkB,YAIvD,MAAOtG,GACP8M,EACG/O,QAAQC,IAAImP,aAAepP,QAAQC,IAAImP,YAAY7G,QACnDvI,QAAQC,IAAIoP,YAAcrP,QAAQC,IAAIoP,WAAW9G,OAEtD,OAAO,IAAI/I,QAAQ,CAACC,EAAS6I,KAC3B,MAAMgH,EAAOxM,UAAGyM,kBAAkBzB,GAC5BjM,EAAU,CACdF,IAAKkM,GAEHkB,IACFlN,EAAQkN,MAAQA,GAElBjJ,UACG3H,IAAI0D,GACJyF,GAAG,QAASrF,GAAOqG,EAAOrG,IAC1BuM,KAAKc,GACRA,EAAKhI,GAAG,QAASrF,GAAOqG,EAAOrG,IAC/BqN,EAAKhI,GAAG,SAAU,IAAM7H,EAAQqO,Q,cCtFpC3R,EAAOD,QAAUU,G,gXCQI4S,E,WAMnB,WAAY1F,EAAc2F,EAAgBxF,EAAS,K,4FAAI,SACrDyF,KAAK5F,aAAeA,EACpB4F,KAAKD,eAAiBA,EACtBC,KAAKzF,OAASA,EAEdyF,KAAKC,QAAUH,EAAUI,gB,uDA6BzB,MAAM,IAAInH,MAAM,2C,gCAIhB,MAAM,IAAIA,MAAM,8C,8DA7BhB,MAAO,U,6BAIP,OAAOiH,KAAKC,S,aAGHE,GACTH,KAAKC,QAAUE,EACfH,KAAKD,mB,+BAIL,OAAOC,KAAK7R,KAAKiS,oBAAoBzO,QAAQ,OAAQ,O,4BAIrD,OAAOqO,KAAK5F,aAAaiG,SAASL,KAAKM,W,aAG/BzR,GACRmR,KAAK5F,aAAamG,SAASP,KAAKM,SAAUzR,Q,kCApCzBiR,E,kBACM,G,EADNA,E,oBAEQ,G,EAFRA,E,mBAGO,G,EAHPA,E,gBAII,G,UAJJA,G,+FCArB,I,EAAA,OAOA,O,oCACA,O,0KAEqBU,E,WAGnB,WAAYC,EAAYtO,I,4FAAS,SAC/B6N,KAAKS,WAAaA,EAClBT,KAAK7N,QAAUA,EACf6N,KAAKjL,cAAgB,GACrBiL,KAAKU,sBAAwB,GAE7BV,KAAKW,qBAAkB9F,EACvBmF,KAAKY,+BAA4B/F,EACjCmF,KAAKa,aAAc,EAEnBb,KAAKc,gB,gEAIDd,KAAKW,iBACPI,aAAaf,KAAKW,iBAEpBX,KAAKW,gBAAkB3Q,WACrBgQ,KAAKgB,QAAQ5R,KAAK4Q,MAClBQ,EAAeS,sB,gCAKjB,IAAIjB,KAAKa,cAAgB,IAAAxM,cAAa2L,KAAKS,YAG3C,OAAOT,KAAK7N,QAAQ+O,aAAavO,UAC/BqN,KAAKa,aAAc,EACnB,UACQ,IAAI/Q,QAAQ,CAACC,EAAS6I,MAC1B,IAAAI,eACE,CAAC,OAAQ,QAASgH,KAAK7N,QAAQgP,IAAK,gBAAiBnB,KAAKS,YAC1D,CAACzI,EAAML,EAAQG,KACA,IAATE,EACFjI,IAEA6I,EAAO,IAAIG,MAAMjB,QAKzB,MAAOvF,GACPF,QAAQ6F,KAAK3F,GAEfyN,KAAKa,aAAc,M,sCAKrB,MAAMO,EAAUpB,KAAK7N,QAAQkP,wBAC3BrQ,UAAKI,KAAK4O,KAAKS,WAAY,mBAE7BT,KAAKjL,cAAchC,KACjBqO,EACAA,EAAQE,YAAY,KAClBtB,KAAKuB,iBACLvB,KAAKwB,6BAEPJ,EAAQK,YAAY,KAClBzB,KAAKuB,iBACLvB,KAAKwB,6BAEPJ,EAAQM,YAAY,IAAM1B,KAAK2B,sBAEjC3B,KAAKwB,6B,iDAIDxB,KAAKY,2BACPG,aAAaf,KAAKY,2BAEpBZ,KAAKY,0BAA4B5Q,WAC/BgQ,KAAK2B,kBAAkBvS,KAAK4Q,MACQ,EAApCQ,EAAeS,sB,gDAMjB,IADA,IAAAnM,sBAAqBkL,KAAKU,wBACrB,IAAArM,cAAa2L,KAAKS,YAGvB,WACST,KAAK4B,kBAAkB/Q,QAAQyD,IACpC,MAAM8M,EAAUpB,KAAK7N,QAAQ0P,uBAAuBvN,GACpD0L,KAAKU,sBAAsB3N,KACzBqO,EACAA,EAAQE,YAAY,IAAMtB,KAAKuB,kBAC/BH,EAAQK,YAAY,IAAMzB,KAAKuB,kBAC/BH,EAAQM,YAAY,IAAM1B,KAAKuB,qBAGnC,MAAOhP,GACPF,QAAQ6F,KAAK3F,M,6CAKViO,EAAesB,mBAClBtB,EAAesB,uBAAyB,IAAApP,qBACtCsN,KAAK7N,QAAQhC,oBAGjB,MAAM4R,EAAc,CAClB,YACA,yCACA,kDACA,kGACA,0KACA,+BAEF,OAAO,IAAIjS,QAAQ,CAACC,EAAS6I,MAC3B,IAAA7G,YACEyO,EAAesB,iBACf,CAAC,KAAMC,EAAY3Q,KAAK,MACxB,CAAC4G,EAAML,EAAQG,KACA,IAATE,EACFjI,EACE4H,EACGzB,WACA2C,OACAxH,MAAM,MAGXuH,EAAO,IAAIG,MAAMjB,KAGrB,CACEjB,aAAc,CACZC,IAAKkJ,KAAKS,kB,iCAQlB,IAAA3L,sBAAqBkL,KAAKU,wBAC1B,IAAA5L,sBAAqBkL,KAAKjL,eACtBiL,KAAKW,iBACPI,aAAaf,KAAKW,iBAEhBX,KAAKY,2BACPG,aAAaf,KAAKY,gC,+IAnJHJ,E,qBACS,K,UADTA,G,gICVrB,IAAYwB,E,EAAZ,MACYC,E,EAAZ,MACYC,E,EAAZ,MAEA,Q,IAEA,O,IACA,O,IACA,O,IACA,O,okBAEA,MAAMC,EAAY,CAChBrC,oBACAsC,+BAGIC,EAAU,CACd7B,yBACA8B,0BACAC,4BACAC,qB,EAGOR,O,EAAMC,O,EAAME,Y,EAAWE,U,EAASH,Q,cC/BzCzV,EAAOD,QAAUW,G,cCAjBV,EAAOD,QAAUY,G,cCAjBX,EAAOD,QAAUE,QAAQ,S,cCAzBD,EAAOD,QAAUa,G,cCAjBZ,EAAOD,QAAUc,G,cCAjBb,EAAOD,QAAUe,G,+GCQjB,I,IAAA,O,IACA,M,oXAEagV,E,EAAAA,a,WAoHX,WAAY9B,EAAYU,GAAK,UAC3BnB,KAAKS,WAAaA,EAClBT,KAAKmB,IAAMA,E,mDAIX,IAAKnB,KAAKS,WACR,MAAO,GAET,MAAMgC,EAAc,GAEdC,EAAUpS,QAAQwG,MACxBxG,QAAQqS,MAAM3C,KAAKS,YACnB,IACE,MAAMmC,EAAS,IAAIC,UAAc7R,UAAKI,KAAK4O,KAAKS,WAAY,mBAC5D,IAAK,MAAMlQ,KAAOqS,EAAOE,OAAQ,CAC/B,MAAMrS,EAAWmS,EAAOnU,IAAK,OAAM8B,IAAO,YACrCE,GAGLgS,EAAY1P,KAAK,CACfxC,MACAE,cAGJ,MAAO8B,GAIP,OAHAF,QAAQ6F,KACL,4CAA2C8H,KAAKS,eAAelO,KAE3D,GAGTjC,QAAQqS,MAAMD,GAEd,MAAMhG,EAAS,GAgCf,OA7BA6F,EAAaQ,UAAUlS,QAAQmS,IACxBA,EAAK1R,SAAUmR,EAAYzL,KAAK5B,GAAQ4N,EAAK1R,OAAO8D,KACvDsH,EAAO3J,KAAK,IAAIyP,EAASQ,EAAK7U,KAAM6U,EAAKhP,YAAagP,EAAKxM,KAAKyM,MAAM,OAKtER,EAAYzN,OAAS,GACvByN,EAAY5R,QAAQuE,IAClBmN,EAAaQ,UAAUlS,QAAQmS,KACzBA,EAAKE,UAAcF,EAAK1R,SAAU0R,EAAK1R,OAAO8D,IAChDsH,EAAO3J,KACL,IAAIyP,EAASQ,EAAK7U,KAAM6U,EAAKhP,YAAa,IACrCgP,EAAKxM,KAAKyM,MAAM,GACnB,gBACA7N,EAAK7E,WASjBmM,EAAO3J,KAAK,IAAIyP,EAAS,gCAA4B3H,EAAW,CAAC,MAAO,YACxE6B,EAAO3J,KACL,IAAIyP,EAAS,kCAA8B3H,EAAW,CAAC,OAAQ,QAASmF,KAAKmB,OAGxEzE,M,iBArLU,CACjB,CACEvO,KAAM,QACNqI,KAAM,CAAC,OACP0M,UAAU,GAEZ,CACE/U,KAAM,SACNqI,KAAM,CAAC,MAAO,WAAY,UAC1B0M,UAAU,GAEZ,CACE/U,KAAM,UACNqI,KAAM,CAAC,SAAU,WACjB0M,UAAU,GAEZ,CACE/U,KAAM,qBACNqI,KAAM,CAAC,MAAO,WAAY,SAAU,WAAY,WAChD0M,UAAU,EACV5R,OAAQ8D,IAASA,EAAK3E,SAASc,SAAS,cAE1C,CACEpD,KAAM,0BACNqI,KAAM,CAAC,MAAO,WAAY,WAC1B0M,UAAU,EACV5R,OAAQ8D,GAAQA,EAAK3E,SAASc,SAAS,aAEzC,CACEpD,KAAM,YACNqI,KAAM,CAAC,MAAO,WAAY,SAC1B0M,UAAU,EACV5R,OAAQ8D,GAAQA,EAAK3E,SAASc,SAAS,aAEzC,CACEpD,KAAM,uBACNqI,KAAM,CAAC,MAAO,WAAY,QAAS,WAAY,UAC/C0M,UAAU,EACV5R,OAAQ8D,GAAQA,EAAK3E,SAASc,SAAS,aAEzC,CACEpD,KAAM,wCACNqI,KAAM,CAAC,MAAO,WAAY,QAAS,WAAY,WAC/C0M,UAAU,EACV5R,OAAQ8D,GAAQA,EAAK3E,SAASc,SAAS,aAEzC,CACEpD,KAAM,2BACNqI,KAAM,CAAC,MAAO,WAAY,YAC1B0M,UAAU,EACV5R,OAAQ8D,GACNA,EAAK3E,SAASc,SAAS,cAAgB6D,EAAK3E,SAASc,SAAS,cAElE,CACEpD,KAAM,cACNqI,KAAM,CAAC,MAAO,WAAY,SAC1B0M,UAAU,EACV5R,OAAQ8D,GACNA,EAAK3E,SAASc,SAAS,cAAgB6D,EAAK3E,SAASc,SAAS,cAElE,CACEpD,KAAM,UACNqI,KAAM,CAAC,SAAU,SAEnB,CACErI,KAAM,OACNqI,KAAM,CAAC,QACP0M,UAAU,GAEZ,CACE/U,KAAM,QACNqI,KAAM,CAAC,SACP0M,UAAU,GAEZ,CACE/U,KAAM,YACN6F,YAAa,sBACbwC,KAAM,CAAC,SACP0M,UAAU,GAEZ,CACE/U,KAAM,QACNqI,KAAM,CAAC,MAAO,WAAY,SAC1B0M,UAAU,GAEZ,CACE/U,KAAM,gBACNqI,KAAM,CAAC,MAAO,aACd0M,UAAU,GAEZ,CACE/U,KAAM,iBACNqI,KAAM,CAAC,MAAO,YAAa,WAAY,UACvC0M,UAAU,GAEZ,CACE/U,KAAM,gBACNqI,KAAM,CAAC,SAAU,MAAO,WAAY,UACpC0M,UAAU,GAEZ,CACE/U,KAAM,iBACNqI,KAAM,CAAC,SAAU,SAAU,YAE7B,CACErI,KAAM,iBACNqI,KAAM,CAAC,SAAU,SAAU,SAE7B,CACErI,KAAM,cACNqI,KAAM,CAAC,SAAU,QACjB0M,UAAU,K,mBAhHHX,G,0FA0LAC,E,EAAAA,S,WACX,WAAYrU,EAAM6F,EAAawC,GAAM,UACnCwJ,KAAK7R,KAAOA,EACZ6R,KAAKhM,YAAcA,EACnBgM,KAAKxJ,KAAOA,E,4CA6BZ,OAAOwJ,KAAK7R,KAAKmI,WAAW,W,gCAI5B,OAAO0J,KAAK7R,KAAKmI,WAAW,W,+BAI5B,OAAO0J,KAAK7R,KAAKmI,WAAW,U,iCAjC5B,GAAqB,QAAjB0J,KAAKxJ,KAAK,GACZ,OAAOwJ,KAAKxJ,KAAK,GAEnB,MAAM2M,EAAQnD,KAAKxJ,KAAK3B,QAAQ,YAChC,OAAkB,IAAXsO,EAAenD,KAAKxJ,KAAK2M,EAAQ,GAAK,U,8BAI7C,MAAMA,EAAQnD,KAAKxJ,KAAK3B,QAAQ,iBAChC,OAAkB,IAAXsO,EAAenD,KAAKxJ,KAAK2M,EAAQ,QAAKtI,I,yBAI7C,IAAI6C,EAAKsC,KAAK7R,KAId,OAHI6R,KAAKoD,UACP1F,GAAO,KAAIsC,KAAKoD,YAEX1F,I,4BAIP,OAAOsC,KAAKhM,YAAe,GAAEgM,KAAKtC,OAAOsC,KAAKhM,eAAiBgM,KAAKtC,O,qGC1NxE,I,IAAA,M,IACA,O,8YAEqBmF,E,WAyBnB,WAAY7R,I,4FAAM,0BAxBR,YAwBQ,mBAvBN,wBAuBM,mBAtBN,iBAsBM,uBArBF,iBAqBE,0BApBC,YAoBD,yBAnBA,+BAoBhBgP,KAAKhP,KAAOA,EACZgP,KAAKqD,QAAU,GACfrD,KAAKsD,MAAQ,GACTtS,GACFgP,KAAKuD,KAAKvS,G,0DAtBYwS,GACxB,MAAM9G,EAAS,GACf,IAAK8G,EACH,OAAO9G,EAEW,iBAAT8G,IACTA,EAAQA,EAAMnS,MAAMmS,EAAMjS,SAAS,MAAQ,KAAO,OAEpD,IAAK,IAAI0B,KAAQuQ,GACfvQ,EAAOA,EAAK4F,SAEV6D,EAAO3J,KAAKE,GAGhB,OAAOyJ,M,gCAYJ1L,GACH,GAAIgP,KAAKqD,QAAQ9R,SAASP,GACxB,OAEFgP,KAAKqD,QAAQtQ,KAAK/B,GAClB,IAAIyS,EAAU,KACVC,EAAS,KACb,IAAK,IAAI7L,KAAQzE,UAAG6K,aAAajN,EAAM,SAASK,MAAM2O,KAAK2D,SAAU,CAGnE,KADA9L,EAAOA,EAAKlG,QAAQqO,KAAK4D,UAAW,KAElC,SAIF,MAAMC,EAAWhM,EAAKiB,MAAMkH,KAAK8D,WACjC,GAAID,EAAU,CACZJ,EAAUI,EAAS,GACd7D,KAAKsD,MAAMG,KACdzD,KAAKsD,MAAMG,GAAW,IAExBC,EAAS,KACT,SAIF,MAAMK,EAAelM,EAAKiB,MAAMkH,KAAKgE,eACrC,GAAIP,GAAWM,EAAc,CAC3BL,EAASK,EAAa,GAAGlL,OACzBmH,KAAKsD,MAAMG,GAASC,GAAUK,EAAa,GAAGlL,OAC9C,SAIF,MAAMoL,EAAkBpM,EAAKiB,MAAMkH,KAAKkE,kBACpCR,GAAUO,IACZjE,KAAKsD,MAAMG,GAASC,IAAW,KAAOO,EAAgB,IAI1DjE,KAAKmE,QAAQ,aAAc,iBAAiBtT,QAAQuT,GAClDC,UAAKC,KAAKF,GAASvT,QAAQoC,GAAQ+M,KAAKuD,KAAKtQ,O,6BAI1CwQ,EAASC,GACd,IAAK1D,KAAKsD,MAAMG,GACd,KAAO,mBAAkBA,IAE3B,IAAI5U,EAAQ,KACZ,GAAI6U,KAAU1D,KAAKsD,MAAMG,GACvB5U,EAAQmR,KAAKsD,MAAMG,GAASC,OACvB,KAAID,EAAQnN,WAAW,QAG5B,KAAO,kBAAiBmN,QAAcC,IAFtC7U,EAAQmR,KAAKvR,IAAI,MAAOiV,GAI1B,OAAK7U,EAAM0C,SAAS,OAAU1C,EAAM0C,SAAS,KAGtC1C,EAAM8C,QAAQqO,KAAKuE,gBAAiB,CAAC3S,EAAG6R,EAASC,IACtD1D,KAAKwE,wBAAwBf,EAASC,IAH/B7U,I,8CAOa4U,EAASC,GAC/B,MAAe,UAAXD,EACKnT,QAAQC,IAAImT,IAAW,GAEzB1D,KAAKvR,IAAIgV,EAASC,K,iCAIzB,OAAOpV,OAAOsC,KAAKoP,KAAKsD,S,6BAIxB,OAAOtD,KAAKyE,WACTnT,OAAO2B,GAAQA,EAAKqD,WAAW,SAC/B6B,IAAIlF,GAAQA,EAAKwF,UAAU,M,0BAG5BgL,EAASC,EAAQgB,GACnB,IACE,OAAO1E,KAAK2E,OAAOlB,EAASC,GAC5B,MAAOnR,GACP,OAAOmS,K,8BAIHjB,EAASC,EAAQgB,GACvB,OAAO7B,EAAc+B,mBAAmB5E,KAAKvR,IAAIgV,EAASC,EAAQgB,Q,eA7HjD7B,G,cCXrBpW,EAAOD,QAAUgB,G,+FCQjB,IAAYwU,E,EAAZ,MACY6C,E,EAAZ,OACY5C,E,EAAZ,MACYC,E,EAAZ,M,IAEA,O,IACA,M,IACA,M,IACA,M,IACA,O,IACA,M,qwCAEqBE,E,YAYnB,aAAc,a,4FAAA,SACZ,yBAAS0C,YACT1N,UAAI2N,qBAEJ,EAAKC,oBAAqB,EAJd,E,6SAYZ,IAAI7E,EAASH,KAAKzF,OAAO0K,aAAaC,iBACtC,EAAG,CACD,MAAMC,QAAyBjD,EAAKxP,oBAClCsN,KAAKzF,OAAOpK,mBAEd,GAAIgV,EACF,OAAOA,EAGT,GAAI7U,QAAQG,SAAS6F,WAAW,OAC9B,IACE,aAAa0J,KAAKoF,0BAClB,MAAO7S,GACPF,QAAQ6F,KAAK3F,GAIjB,MAAMmK,QAAesD,KAAKzF,OAAO0K,aAAaI,SAE9C,IADAlF,EAASzD,EAAOyD,UACDH,KAAKzF,OAAO0K,aAAaK,iBACtC,OAAO5I,EAAOyI,uBAEThF,IAAWH,KAAKzF,OAAO0K,aAAaM,cAG7C,MADAvF,KAAKG,OAASL,UAAU0F,cAClB,IAAIzM,MACR,kF,sDAOF,MAAM0M,EAA8B,QAAjBnV,QAAQ0F,KAAiB,SAAW,GACjD0P,EAAgB,qCAAoCtD,EAAoBuD,wBAAwBvD,EAAoBuD,gBAAgBF,QACpItD,QAAkB0C,EAAQ3G,SAC9BwH,EACA1U,UAAKI,KAAK4Q,EAAK7O,cAAenC,UAAKiG,SAASyO,KAExCE,EAAY5U,UAAKI,KAAK4Q,EAAKhP,aAAc,YAC/C,IAAI6S,EAAa7U,UAAKI,KAAKwU,EAAW,cActC,OAZKxS,UAAGoB,WAAWqR,KACjBA,QAAmB7F,KAAK8F,kCAAkC3D,EAAWyD,GACrE5F,KAAKgF,oBAAqB,GAI5B1U,QAAQC,IAAIQ,KAAO,CACjB6U,EACA5U,UAAKI,KAAKwU,EAAW,WACrBtV,QAAQC,IAAIQ,MACZK,KAAKJ,UAAKC,WACZX,QAAQC,IAAIO,KAAOR,QAAQC,IAAIQ,KACxB8U,I,wDAGyB1D,EAAWyD,GAC3C,GAAIxS,UAAG2D,gBAAgB6O,GACrB,IACExS,UAAG6E,WAAW2N,GACd,MAAOrT,GACPF,QAAQ6F,KAAK3F,GAGjB,MAAMwT,EAAU/U,UAAKI,KAAK4Q,EAAK7O,cAAe,wBAC9C,OAAO,IAAIrD,QAAQ,CAACC,EAAS6I,KAC3BsJ,EAAKnQ,WACHoQ,EACA,CACE,SACA,OACA4D,EACA,kBACA,oBACA,4BACA,cACA,gBACA,gBACA,gBACA,qBACA,iBACA,kBACC,aAAYH,IACZ,4BAA2BA,IAC3B,6BAA4BA,KAE/B5N,GACe,IAATA,GAAc5E,UAAGoB,WAAWxD,UAAKI,KAAKwU,EAAW,eAC5C7V,EAAQiB,UAAKI,KAAKwU,EAAW,gBAElCxS,UAAGoB,WAAWuR,IAChB1T,QAAQkB,MAAMH,UAAG6K,aAAa8H,GAAS7P,YAElC0C,EACL,IAAIG,MACF,kGAIN,CACElC,aAAc,CACZmP,OAAO,S,2CAQf,MAAMC,EAASjE,EAAK7Q,YACpB,IAAKiC,UAAG2D,gBAAgBkP,GACtB,OAAO,EAET,IAEE,OADA7S,UAAG6E,WAAWgO,IACP,EACP,MAAO1T,GAEP,OADAF,QAAQ6F,KAAK3F,IACN,K,yCAKT,OAAO,IAAIzC,QAAQC,IACjBmS,EAAKnQ,WAAW,QAAS,CAAC,aAAciG,GAAQjI,EAAiB,IAATiI,Q,kDAM1D,OADAgI,KAAKkG,qBACE,IAAIpW,QAAQ,CAACC,EAAS6I,KAC3BsJ,EAAKnQ,WACH,QACA,CAAC,SAAU,QAAS,UAAW,WAAY,MAAO,WAAYiQ,EAAK7Q,aACnE,CAAC6G,EAAML,EAAQG,IACA,IAATE,EACKjI,EAAQ4H,GAERiB,EAAO,IAAIG,MAAO,qBAAoBjB,W,wDAQrDkI,KAAKkG,qBACL,MAAMf,QAAyBnF,KAAKmG,gBAC9BC,EAAiB,CACrB,CAACjB,EAAkB,KAAM,OAAQnD,EAAK7Q,aACtC,CAACgU,EAAkB,KAAM,aAAc,KAAMA,EAAkBnD,EAAK7Q,aACpE,CAAC,aAAc,KAAMgU,EAAkBnD,EAAK7Q,aAC5C,CAACgU,EAAkB,KAAM,aAAcnD,EAAK7Q,aAC5C,CAAC,aAAc6Q,EAAK7Q,cAEtB,IAAI+J,EAAY,KAChB,IAAK,MAAMmL,KAAcD,EAAgB,CACvCpG,KAAKkG,qBACL,IACE,aAAa,IAAIpW,QAAQ,CAACC,EAAS6I,KACjCsJ,EAAKnQ,WACHsU,EAAW,GACXA,EAAWpD,MAAM,GACjB,CAACjL,EAAML,EAAQG,IACG,IAATE,EACHjI,EAAQ4H,GACRiB,EAAO,IAAIG,MAAO,sBAAqBjB,SAIjD,MAAOvF,GACPF,QAAQ6F,KAAK3F,GACb2I,EAAY3I,GAIhB,MAAM2I,I,2DAIN8E,KAAKkG,qBACL,MAAMI,QAAoBzB,EAAQ3G,SAChCkE,EAAoBmE,cACpBvV,UAAKI,KAAK4Q,EAAK7O,cAAe,sBAE1ByD,EAASQ,UAAIC,QAAQ,CACzB/C,IAAK0N,EAAK7O,cACVmE,eAAe,IACdnJ,KACGqY,QAAe3B,EAAQlG,aAAa2H,EAAa1P,GACjD6P,EAAmBrT,UACtBsT,aAAaF,GACbG,KAAK1T,GAAgC,kBAAxBjC,UAAKiG,SAAShE,IAC9B,IAAKwT,EACH,MAAM,IAAI1N,MAAM,qCAElB,MAAMoM,QAAyBnF,KAAKmG,gBACpC,OAAO,IAAIrW,QAAQ,CAACC,EAAS6I,KAC3BsJ,EAAKnQ,WACHoT,EACA,CAACsB,EAAkBzE,EAAK7Q,aACxB,CAAC6G,EAAML,EAAQG,KACb,IACE1E,UAAG6E,WAAWrB,GACd,MAAOrE,GACPF,QAAQ6F,KAAK3F,GAEf,GAAa,IAATyF,EACF,OAAOjI,EAAQ4H,GACV,CACL,IAAIiP,EAAoB,sBAAqB9O,MAAWH,IAIxD,OAHIG,EAAOvG,SAAS,6BAClBqV,EAAoB,8FAA6FA,KAE5GhO,EAAO,IAAIG,MAAM6N,W,uDAQhC,MAAMzB,QAAyBnF,KAAKmG,gBACpC,OAAO,IAAIrW,QAAQ,CAACC,EAAS6I,KAC3BsJ,EAAKnQ,WACHoT,EACA,CAAC,KAAM,MAAO,UAAW,cACzB,CAACnN,EAAML,EAAQG,IACA,IAATE,EACKjI,EAAQ4H,GAERiB,EAAO,IAAIG,MAAO,gCAA+BjB,W,+CAQhE,SAAUkI,KAAK6G,mBACb,aAAa7G,KAAK8G,4BAEpB,UACQ9G,KAAK+G,4BACX,MAAOxU,GACPF,QAAQ6F,KAAK3F,GACb,UACQyN,KAAKgH,+BACX,MAAOC,GACP5U,QAAQ6F,KAAK+O,GACb,UACQjH,KAAKkH,iCACLlH,KAAK+G,4BACX,MAAOI,GAGP,MAFAjF,EAAK/M,YAAY8R,GACjB5U,QAAQ6F,KAAKiP,GACP,IAAIpO,MACP,oHAAmHkO,EAAM/Q,mB,uCAOnHiP,GAKf,GAJA/R,UAAGgU,cACDpW,UAAKI,KAAK4Q,EAAK7Q,YAAa,YAC5B,CAAC,WAAY,WAAWC,KAAK,OAE3B4O,KAAKgF,mBACP,OAGF,MAAMqC,QAAqBxC,EAAQ3G,SACjCkE,EAAoBkF,UACpBtW,UAAKI,KAAK4Q,EAAK7O,cAAenC,UAAKiG,SAASmL,EAAoBkF,aAElE,OAAO,IAAIxX,QAAQ,CAACC,EAAS6I,KAC3BsJ,EAAKnQ,WAAWoT,EAAkB,CAACkC,GAAe,CAACrP,EAAML,EAAQG,IAC/C,IAATE,EAAajI,EAAQ4H,GAAUiB,EAAOd,Q,6CAMjD,MAAMqN,QAAyBnF,KAAKmG,gBAGpC,UACQnG,KAAKuH,WAAWpC,GACtB,MAAO5S,GACPF,QAAQ6F,KAAK3F,GACb2P,EAAK/M,YAAY,IAAI4D,MAAO,mBAAkBxG,EAAI2D,eAIpD,MAAMM,EAAO,CAAC,KAAM,MAAO,UAAW,MAMtC,OALIwJ,KAAKzF,OAAOiN,sBACdhR,EAAKzD,KAAKqP,EAAoBqF,mBAE9BjR,EAAKzD,KAAK,cAEL,IAAIjD,QAAQ,CAACC,EAAS6I,KAC3BsJ,EAAKnQ,WAAWoT,EAAkB3O,EAAM,CAACwB,EAAML,EAAQG,KACrD,GAAa,IAATE,EAMF,OAHIkK,EAAKzQ,aACPqG,EAAU,mGAAkGA,KAEvGc,EAAO,IAAIG,MAAO,aAAYjB,MALrC/H,EAAQ4H,S,uCAYd,OAAO,IAAI7H,QAAQC,IACjBiS,EAAKhJ,cACH,CAAC,OAAQ,SAAU,oBACnB,CAAChB,EAAML,EAAQG,KACA,IAATE,GACF3F,QAAQ6F,KAAKP,EAAQG,GAEhB/H,GAAQ,S,kCAOrB,IAAI0L,EAAQuE,KAAKvE,MAOjB,OANKA,GAAUA,EAAMiM,gBAAmBjM,EAAMkM,iBAC5ClM,EAAQ,CACNiM,eAAgB,EAChBC,eAAgB,OAGblM,I,+CAGgBmM,GACvB,MAAMC,EAAW7H,KAAK8H,YAChBC,GAAM,IAAIC,MAAOC,WAEpB3X,QAAQC,IAAI2X,gBACXL,EAASF,gBACTE,EAASF,iBAAmBrX,QAAQC,IAAI2X,gBAC1CH,EAAM3F,EAAoB+F,wBACxB3J,SAASqJ,EAASH,mBAEpBG,EAASH,eAAiBK,QAEpB,IAAIjY,QAAQC,IAChBiS,EAAKhJ,cACH,CACE,aACIgH,KAAKzF,OAAOiN,wBACf3J,UAAOuK,WAAWR,GACf,CAAC,SACD,IAEN,CAAC5P,EAAML,EAAQG,KACA,IAATE,GACF3F,QAAQ6F,KAAKP,EAAQG,GAEvB/H,GAAQ,QAKhB8X,EAASF,eAAiBrX,QAAQC,IAAI2X,eACtClI,KAAKvE,MAAQoM,I,wCAIb,MAAMQ,EAAWrX,UAAKI,KACpB4Q,EAAK7Q,YACLiR,EAAoBkG,qBAEtB,GAAKlV,UAAGoB,WAAW6T,GAAnB,CAIA,GACEjV,UACG6K,aAAaoK,GACbnS,WACA2C,SAAWuJ,EAAoBmG,kBAAkB1P,OAEpD,MAAM,IAAIE,MAAM,mCAElB,OAAO,K,oCAIP3F,UAAGgU,cACDpW,UAAKI,KAAK4Q,EAAK7Q,YAAaiR,EAAoBkG,qBAChDlG,EAAoBmG,qB,oCAKtB,MAAMzL,EAAc+H,EAAQlH,qBAAqBqE,EAAKrJ,cAEtD,GAAIqH,KAAKzF,OAAOpK,kBAAmB,CACjC,IAAKiD,UAAG2D,gBAAgBiL,EAAK9Q,gBAC3B,MAAM,IAAI6H,MAAM,sCAElBiH,KAAKwI,kBACL,UACQxI,KAAKyI,mBAAmB3L,GAC9B,MAAOvK,GACPF,QAAQ6F,KAAK3F,IAIjB,GAAIsL,UAAO6K,GAAG5L,EAAakD,KAAKzF,OAAOoO,mBAMrC,MALA3I,KAAKzF,OAAOqO,sBAAqB,GACjC5I,KAAKzF,OAAOpK,mBAAoB,EAChC6P,KAAKzF,OAAOiN,sBACVxH,KAAKzF,OAAOiN,uBACZ3J,UAAOuK,WAAWpI,KAAKzF,OAAOoO,mBAC1B,IAAI5P,MAAO,yBAAwB+D,KAK3C,OAFAkD,KAAKG,OAASL,UAAU+I,iBACxBxW,QAAQC,KAAM,kBAAiBwK,MACxB,I,sCAIP,GAAIkD,KAAKG,SAAWL,UAAU+I,iBAC5B,OAAO,EAET,IAAK7I,KAAKzF,OAAOpK,kBAEf,OADA6P,KAAKG,OAASL,UAAU+I,kBACjB,EAET7I,KAAKG,OAASL,UAAUgJ,kBAExB,UAEQ7G,EAAK5G,2BAEL2E,KAAK+I,mBACX/I,KAAKgJ,oBAEChJ,KAAKiJ,uBACLjJ,KAAKkJ,iBACX,MAAO3W,GAEP,MADA2P,EAAK/M,YAAY5C,GACXA,EAIR,OADAyN,KAAKG,OAASL,UAAU+I,kBACjB,I,2BA7cP,MAAO,uB,8BApBsC/I,W,EAA5BsC,E,0BACc,Q,EADdA,E,sBAEU,gB,EAFVA,E,oBAGS,GAAEvM,UAAGC,UAAUD,UAAGG,UAAUH,UAAGE,a,EAHxCqM,E,gBAKI,S,EALJA,E,YAMA,wC,EANAA,E,gBAQjB,uI,EARiBA,E,oBAUjB,gE,UAViBA,G,+FCZrB,I,EAAA,Q,oCACA,O,0KAEqBE,E,WACnB,WAAYnQ,I,4FAAS,SACnB6N,KAAK7N,QAAUA,EACf6N,KAAKmJ,UAAY,G,4DAGNC,GAEXpJ,KAAKmJ,UAAYnJ,KAAKmJ,UAAU7X,OAAO2B,KACjCmW,EAAY7X,SAAS0B,EAAKwN,cAG9BxN,EAAKiC,WACE,IAGT,IAAK,MAAMuL,KAAc2I,EAAa,CACpC,GAAIpJ,KAAKmJ,UAAUnS,KAAK/D,GAAQA,EAAKwN,aAAeA,GAClD,SAEF,MAAM4I,EAAU,IAAI7I,UAAeC,EAAYT,KAAK7N,SACpD6N,KAAKmJ,UAAUpW,KAAKsW,SACdA,EAAQrI,a,qCAKhBhB,KAAKmJ,UAAUtY,QAAQoC,GAAQA,EAAK+N,a,iCAIpC,IAAAlM,sBAAqBkL,KAAKmJ,gB,0CA/BT7G","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"fs-plus\"), require(\"request\"), require(\"querystringify\"), require(\"tmp\"), require(\"semver\"), require(\"cross-spawn\"), require(\"tar\"), require(\"jsonrpc-lite\"), require(\"tcp-port-used\"), require(\"ws\"), require(\"glob\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"platformio-node-helpers\", [\"fs-plus\", \"request\", \"querystringify\", \"tmp\", \"semver\", \"cross-spawn\", \"tar\", \"jsonrpc-lite\", \"tcp-port-used\", \"ws\", \"glob\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"platformio-node-helpers\"] = factory(require(\"fs-plus\"), require(\"request\"), require(\"querystringify\"), require(\"tmp\"), require(\"semver\"), require(\"cross-spawn\"), require(\"tar\"), require(\"jsonrpc-lite\"), require(\"tcp-port-used\"), require(\"ws\"), require(\"glob\"));\n\telse\n\t\troot[\"platformio-node-helpers\"] = factory(root[\"fs-plus\"], root[\"request\"], root[\"querystringify\"], root[\"tmp\"], root[\"semver\"], root[\"cross-spawn\"], root[\"tar\"], root[\"jsonrpc-lite\"], root[\"tcp-port-used\"], root[\"ws\"], root[\"glob\"]);\n})(global, function(__WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__4__, __WEBPACK_EXTERNAL_MODULE__7__, __WEBPACK_EXTERNAL_MODULE__8__, __WEBPACK_EXTERNAL_MODULE__11__, __WEBPACK_EXTERNAL_MODULE__15__, __WEBPACK_EXTERNAL_MODULE__16__, __WEBPACK_EXTERNAL_MODULE__18__, __WEBPACK_EXTERNAL_MODULE__19__, __WEBPACK_EXTERNAL_MODULE__20__, __WEBPACK_EXTERNAL_MODULE__23__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","/**\n * Copyright (c) 2017-present PlatformIO <contact@platformio.org>\n * All rights reserved.\n *\n * This source code is licensed under the license found in the LICENSE file in\n * the root directory of this source tree.\n */\n\nimport { getCacheDir, getCoreDir, getEnvBinDir, getEnvDir } from './core';\n\nimport fs from 'fs';\nimport fsPlus from 'fs-plus';\nimport os from 'os';\nimport path from 'path';\nimport qs from 'querystringify';\nimport request from 'request';\nimport spawn from 'cross-spawn';\nimport tmp from 'tmp';\n\nconst CHECK_PYTHON_SCRIPT = `\nimport os\nimport sys\n\n\nIS_WINDOWS = sys.platform.lower().startswith(\"win\")\nPYTHON_EXE = sys.executable\nCHECK_HTTPS_URLS = [\"https://github.com\", \"https://platformio.org\"]\n\n\ndef check_min_version():\n    assert (\n        sys.version_info >= (2, 7, 9) and sys.version_info < (3,)\n    ) or sys.version_info >= (3, 5)\n\n\ndef check_win_custom():\n    assert not any(s in PYTHON_EXE.lower() for s in (\"msys\", \"mingw\", \"emacs\"))\n    assert os.path.isdir(os.path.join(sys.prefix, \"Scripts\")) or (\n        sys.version_info >= (3, 5) and __import__(\"venv\")\n    )\n\n\ndef check_urllib_ssl():\n    for url in CHECK_HTTPS_URLS:\n        if url_status_ok(url):\n            return True\n    return False\n\n\ndef url_status_ok(url):\n    for f in (\n        urllib_url_status_ok,\n        urllib3_url_status_ok,\n        requests_url_status_ok,\n    ):\n        try:\n            assert f(url)\n            return True\n        except Exception as e:\n            print(e)\n    return False\n\n\ndef urllib_url_status_ok(url):\n    try:\n        from urllib.request import urlopen\n    except ImportError:\n        from urllib import urlopen\n    try:\n        return int(urlopen(url).getcode()) == 200\n    except:\n        return False\n\n\ndef urllib3_url_status_ok(url):\n    import urllib3\n\n    try:\n        return int(urllib3.PoolManager().request(\"GET\", url).status) == 200\n    except:\n        return False\n\n\ndef requests_url_status_ok(url):\n    import requests\n\n    r = requests.get(url)\n    r.raise_for_status()\n    return True\n\n\nif __name__ == \"__main__\":\n    # we do not support cygwin\n    assert sys.platform != \"cygwin\"\n\n    check_min_version()\n\n    if IS_WINDOWS:\n        check_win_custom()\n\n    assert check_urllib_ssl()\n\n    print(PYTHON_EXE)\n    sys.exit(0)\n\n`;\n\nexport const IS_WINDOWS = process.platform.startsWith('win');\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function patchOSEnviron({\n  caller,\n  useBuiltinPIOCore = true,\n  extraPath,\n  extraVars\n}) {\n  process.env.PLATFORMIO_CALLER = caller;\n  // Fix for platformio-atom-ide/issues/112\n  if (process.platform === 'darwin') {\n    process.env.LC_ALL = 'en_US.UTF-8';\n  }\n  if (caller === 'atom') {\n    process.env.PLATFORMIO_DISABLE_PROGRESSBAR = 'true';\n  }\n\n  if (extraVars) {\n    Object.keys(extraVars).forEach(name => (process.env[name] = extraVars[name]));\n  }\n\n  // Fix for https://github.com/atom/atom/issues/11302\n  if (process.env.Path) {\n    if (process.env.PATH) {\n      process.env.PATH += path.delimiter + process.env.Path;\n    } else {\n      process.env.PATH = process.env.Path;\n    }\n  }\n\n  if (useBuiltinPIOCore) {\n    // Insert bin directory into PATH\n    process.env.PATH = [getEnvBinDir(), getEnvDir(), process.env.PATH].join(\n      path.delimiter\n    );\n  } else {\n    // Remove bin directory from PATH\n    process.env.PATH = process.env.PATH.split(path.delimiter)\n      .filter(p => !p.includes(getEnvDir()))\n      .join(path.delimiter);\n  }\n\n  if (extraPath && !process.env.PATH.includes(extraPath)) {\n    process.env.PATH = [extraPath, process.env.PATH].join(path.delimiter);\n  }\n\n  // Expand Windows environment variables in %xxx% format\n  const reWindowsEnvVar = /\\%([^\\%]+)\\%/g;\n  while (IS_WINDOWS && reWindowsEnvVar.test(process.env.PATH)) {\n    process.env.PATH = process.env.PATH.replace(reWindowsEnvVar, (_, envvar) => {\n      return process.env[envvar] || '';\n    });\n  }\n\n  // copy PATH to Path (Windows issue)\n  if (process.env.Path) {\n    process.env.Path = process.env.PATH;\n  }\n\n  // Configure NO_PROXY for PIO Home\n  process.env.NO_PROXY =\n    '127.0.0.1' + (process.env.NO_PROXY ? `,${process.env.NO_PROXY}` : '');\n}\n\nexport function runCommand(cmd, args, callback = undefined, options = {}) {\n  console.info('runCommand', cmd, args, options);\n  const outputLines = [];\n  const errorLines = [];\n  let completed = false;\n  let tmpDir = null;\n\n  options.spawnOptions = options.spawnOptions || {};\n  if (!options.spawnOptions.cwd && fsPlus.isDirectorySync(getEnvBinDir())) {\n    options.spawnOptions.cwd = getEnvBinDir();\n  }\n\n  if (\n    IS_WINDOWS &&\n    ['pip', 'virtualenv'].some(item => [path.basename(cmd), ...args].includes(item))\n  ) {\n    // Overwrite TMPDIR and avoid issue with ASCII error for Python's PIP\n    const tmpEnv = Object.assign({}, process.env);\n    tmpDir = tmp.dirSync({\n      dir: getCacheDir(),\n      unsafeCleanup: true\n    }).name;\n    tmpEnv.TMPDIR = tmpEnv.TEMP = tmpEnv.TMP = tmpDir;\n    options.spawnOptions.env = tmpEnv;\n    options.spawnOptions.cwd = tmpDir;\n  }\n\n  try {\n    const child = spawn(cmd, args, options.spawnOptions);\n\n    child.stdout.on('data', line => outputLines.push(line));\n    child.stderr.on('data', line => errorLines.push(line));\n    child.on('close', onExit);\n    child.on('error', err => {\n      errorLines.push(err.toString());\n      onExit(-1);\n    });\n  } catch (err) {\n    errorLines.push(err.toString());\n    onExit(-1);\n  }\n\n  function onExit(code) {\n    if (completed || !callback) {\n      return;\n    }\n    completed = true;\n\n    if (tmpDir) {\n      try {\n        fsPlus.removeSync(tmpDir);\n      } catch (err) {\n        console.warn(err);\n      }\n    }\n\n    const stdout = outputLines.map(x => x.toString()).join('');\n    const stderr = errorLines.map(x => x.toString()).join('');\n    callback(code, stdout, stderr);\n  }\n}\n\nexport function processHTTPRequest(url, callback, options) {\n  options = options || {};\n  options.url = url;\n  if (!options.headers) {\n    options.headers = {\n      'User-Agent': 'PlatformIO'\n    };\n  }\n  console.info('processHTTPRequest', options);\n  return request(options, (err, response, body) => {\n    return callback(err, response, body);\n  });\n}\n\nexport async function getPythonExecutable(\n  useBuiltinPIOCore = true,\n  customDirs = undefined\n) {\n  const exenames = IS_WINDOWS ? ['python.exe'] : ['python3', 'python', 'python2'];\n  const locations = customDirs || [];\n\n  if (useBuiltinPIOCore) {\n    locations.push(getEnvBinDir());\n    locations.push(getEnvDir()); // conda\n  }\n  if (IS_WINDOWS) {\n    // isolated Python 3.7 in PlatformIO Home directory\n    locations.push(path.join(getCoreDir(), 'python37'));\n  }\n  // extend with paths from env.PATH\n  process.env.PATH.split(path.delimiter).forEach(item => {\n    if (!locations.includes(item)) {\n      locations.push(item);\n    }\n  });\n\n  const checkScriptPath = path.join(getCacheDir(), 'check-python.py');\n  fs.writeFile(checkScriptPath, CHECK_PYTHON_SCRIPT, err => {\n    if (err) {\n      console.error(err);\n    }\n  });\n\n  for (const location of locations) {\n    for (const exename of exenames) {\n      const executable = path.normalize(path.join(location, exename)).replace(/\"/g, '');\n      if (\n        fs.existsSync(executable) &&\n        (await _isCompatiblePython(executable, checkScriptPath))\n      ) {\n        return executable;\n      }\n    }\n  }\n  return undefined;\n}\n\nfunction _isCompatiblePython(executable, checkScriptPath) {\n  return new Promise(resolve => {\n    runCommand(executable, [checkScriptPath], (code, stdout, stderr) => {\n      console.info(stdout);\n      if (stderr) {\n        console.warn(stderr);\n      }\n      resolve(code === 0);\n    });\n  });\n}\n\nexport function getErrorReportUrl(title, description) {\n  const errorToUrls = [\n    [\n      'System: Darwin, 19.0.0',\n      'https://github.com/platformio/platformio-vscode-ide/issues/1108'\n    ],\n    [\n      'WindowsError: [Error 5]',\n      'https://github.com/platformio/platformio-vscode-ide/issues/884'\n    ],\n    [\n      'Could not start PIO Home server: Error: timeout',\n      'https://github.com/platformio/platformio-vscode-ide/issues/205'\n    ],\n    [\n      'Failed to download file',\n      'https://github.com/platformio/platformio-vscode-ide/issues/386'\n    ],\n    [\n      'Conda Virtualenv',\n      'https://github.com/platformio/platformio-vscode-ide/issues/914'\n    ],\n    [\n      \"ModuleNotFoundError: No module named 'distutils\",\n      'https://github.com/platformio/platformio-vscode-ide/issues/907'\n    ]\n  ];\n  for (const item of errorToUrls) {\n    if (description.includes(item[0])) {\n      return item[1];\n    }\n  }\n  return `https://github.com/platformio/platformio-${process.env.PLATFORMIO_CALLER ||\n    'vscode'}-ide/issues/new?${qs.stringify({\n    title,\n    body: description,\n    labels: 'auto'\n  })}`;\n}\n\nexport function isPIOProject(dir) {\n  return fsPlus.isFileSync(path.join(dir, 'platformio.ini'));\n}\n\nexport function arrayRemove(array, element) {\n  return array.splice(array.indexOf(element), 1);\n}\n\nexport function disposeSubscriptions(subscriptions) {\n  while (subscriptions.length) {\n    subscriptions.pop().dispose();\n  }\n}\n\nfunction uuid() {\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return `${s4()}${s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\n}\n\nexport function reportError(err) {\n  const data = {\n    v: 1,\n    tid: 'UA-1768265-13',\n    cid: uuid(),\n    aid: 'node.helpers',\n    av: PACKAGE_VERSION,\n    an: `${os.type()}, ${os.release()}, ${os.arch()}`,\n    t: 'exception',\n    exd: err.toString(),\n    exf: 1\n  };\n  if (process.env.PLATFORMIO_CALLER) {\n    data['cd1'] = process.env.PLATFORMIO_CALLER;\n  }\n  request.post('https://www.google-analytics.com/collect', {\n    body: qs.stringify(data)\n  });\n}\n","module.exports = require(\"path\");","/**\n * Copyright (c) 2017-present PlatformIO <contact@platformio.org>\n * All rights reserved.\n *\n * This source code is licensed under the license found in the LICENSE file in\n * the root directory of this source tree.\n */\n\nimport { IS_WINDOWS, runCommand } from './misc';\n\nimport fs from 'fs-plus';\nimport path from 'path';\n\nexport function getCoreDir() {\n  let userHomeDir = process.env.HOME || '~';\n  if (IS_WINDOWS) {\n    if (process.env.USERPROFILE) {\n      userHomeDir = process.env.USERPROFILE;\n    } else if (process.env.HOMEPATH) {\n      userHomeDir = path.join(process.env.HOMEDRIVE || '', process.env.HOMEPATH);\n    }\n  }\n  const coreDir =\n    process.env.PLATFORMIO_CORE_DIR ||\n    process.env.PLATFORMIO_HOME_DIR /* backward compatibility */ ||\n    path.join(userHomeDir, '.platformio');\n  if (!IS_WINDOWS) {\n    return coreDir;\n  }\n  const coreDirPathFormat = path.parse(coreDir);\n  const rootDir = path.format({\n    root: coreDirPathFormat.root,\n    dir: coreDirPathFormat.root,\n    base: '.platformio',\n    name: '.platformio'\n  });\n  // if we already created it\n  if (fs.isDirectorySync(rootDir)) {\n    return rootDir;\n  }\n  // Make sure that all path characters have valid ASCII codes.\n  for (const char of coreDir) {\n    if (char.charCodeAt(0) > 127) {\n      // If they don't, put the pio home directory into the root of the disk.\n      return rootDir;\n    }\n  }\n  return coreDir;\n}\n\nexport function getEnvDir() {\n  if ('PLATFORMIO_PENV_DIR' in process.env) {\n    return process.env['PLATFORMIO_PENV_DIR'];\n  }\n  return path.join(getCoreDir(), 'penv');\n}\n\nexport function getEnvBinDir() {\n  return path.join(getEnvDir(), IS_WINDOWS ? 'Scripts' : 'bin');\n}\n\nexport function getCacheDir() {\n  const dir = path.join(getCoreDir(), '.cache');\n  if (!fs.isDirectorySync(dir)) {\n    fs.makeTreeSync(dir);\n  }\n  return dir;\n}\n\nexport function getVersion() {\n  return new Promise((resolve, reject) => {\n    runCommand('platformio', ['--version'], (code, stdout, stderr) => {\n      if (code === 0) {\n        try {\n          return resolve(stdout.trim().match(/[\\d+\\.]+.*$/)[0]);\n        } catch (err) {\n          return reject(err.toString());\n        }\n      }\n      return reject(new Error(stderr));\n    });\n  });\n}\n\nexport function runPIOCommand(args, callback, options = {}) {\n  const baseArgs = ['-f'];\n  if (process.env.PLATFORMIO_CALLER) {\n    baseArgs.push('-c');\n    baseArgs.push(process.env.PLATFORMIO_CALLER);\n  }\n  runCommand('platformio', [...baseArgs, ...args], callback, options);\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","module.exports = require(\"fs\");","module.exports = require(\"os\");","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8__;","/**\n * Copyright (c) 2017-present PlatformIO <contact@platformio.org>\n * All rights reserved.\n *\n * This source code is licensed under the license found in the LICENSE file in\n * the root directory of this source tree.\n */\n\nimport { getCoreDir, runPIOCommand } from './core';\nimport { reportError, sleep } from './misc';\n\nimport { PEPverToSemver } from './installer/helpers';\nimport fs from 'fs-plus';\nimport jsonrpc from 'jsonrpc-lite';\nimport path from 'path';\nimport qs from 'querystringify';\nimport request from 'request';\nimport semver from 'semver';\nimport tcpPortUsed from 'tcp-port-used';\nimport ws from 'ws';\n\nconst SERVER_LAUNCH_TIMEOUT = 5 * 60; // 5 minutes\nconst SERVER_AUTOSHUTDOWN_TIMEOUT = 3600; // 1 hour\nconst HTTP_HOST = '127.0.0.1';\nconst HTTP_PORT_BEGIN = 8010;\nconst HTTP_PORT_END = 8050;\nconst SESSION_ID = Math.round(Math.random() * 1000000);\nlet HTTP_PORT = 0;\nlet IDECMDS_LISTENER_STATUS = 0;\n\nexport function getFrontendUri(serverHost, serverPort, options) {\n  const stateStorage = (loadState() || {}).storage || {};\n  const params = {\n    start: options.start || '/',\n    theme: stateStorage.theme || options.theme,\n    workspace: stateStorage.workspace || options.workspace,\n    sid: SESSION_ID\n  };\n  Object.keys(params).forEach(key => {\n    if ([undefined, null].includes(params[key])) {\n      delete params[key];\n    }\n  });\n  return `http://${serverHost}:${serverPort}?${qs.stringify(params)}`;\n}\n\nexport async function getFrontendVersion(serverHost, serverPort) {\n  return await new Promise(resolve => {\n    request(`http://${serverHost}:${serverPort}/package.json`, function(\n      error,\n      response,\n      body\n    ) {\n      if (error || !response || response.statusCode !== 200) {\n        return resolve(undefined);\n      }\n      try {\n        return resolve(JSON.parse(body).version);\n      } catch (err) {}\n      return resolve(undefined);\n    });\n  });\n}\n\nasync function listenIDECommands(callback) {\n  if (IDECMDS_LISTENER_STATUS > 0) {\n    return;\n  }\n  let coreVersion = '0.0.0';\n  const coreVersionMsgId = Math.random().toString();\n  const sock = new ws(`ws://${HTTP_HOST}:${HTTP_PORT}/wsrpc`, {\n    perMessageDeflate: false\n  });\n  sock.onopen = () => {\n    IDECMDS_LISTENER_STATUS = 1;\n    sock.send(JSON.stringify(jsonrpc.request(coreVersionMsgId, 'core.version')));\n  };\n\n  sock.onclose = () => {\n    IDECMDS_LISTENER_STATUS = 0;\n  };\n\n  sock.onmessage = event => {\n    try {\n      const result = jsonrpc.parse(event.data);\n      switch (result.type) {\n        case 'success':\n          if (result.payload.id === coreVersionMsgId) {\n            coreVersion = PEPverToSemver(result.payload.result);\n          } else {\n            callback(result.payload.result.method, result.payload.result.params);\n          }\n          break;\n\n        case 'error':\n          console.error('Errored result: ' + result.payload.toString());\n          break;\n      }\n    } catch (err) {\n      console.error('Invalid RPC message: ' + err.toString());\n    }\n\n    let data = null;\n    if (semver.gte(coreVersion, '4.0.1')) {\n      data = jsonrpc.request(Math.random().toString(), 'ide.listen_commands', [\n        SESSION_ID\n      ]);\n    } else {\n      data = jsonrpc.request(Math.random().toString(), 'ide.listen_commands');\n    }\n    sock.send(JSON.stringify(data));\n  };\n}\n\nasync function isPortUsed(host, port) {\n  return new Promise(resolve => {\n    tcpPortUsed.check(port, host).then(\n      result => {\n        return resolve(result);\n      },\n      () => {\n        return resolve(false);\n      }\n    );\n  });\n}\n\nasync function findFreePort() {\n  let port = HTTP_PORT_BEGIN;\n  while (port < HTTP_PORT_END) {\n    if (!(await isPortUsed(HTTP_HOST, port))) {\n      return port;\n    }\n    // reuse opened from other IDE window/session\n    if (await getFrontendVersion(HTTP_HOST, port)) {\n      return port;\n    }\n    port++;\n  }\n  return 0;\n}\n\nexport async function isServerStarted() {\n  if (!(await isPortUsed(HTTP_HOST, HTTP_PORT))) {\n    return false;\n  }\n  return !!(await getFrontendVersion(HTTP_HOST, HTTP_PORT));\n}\n\nexport async function ensureServerStarted(options = {}) {\n  const maxAttempts = 3;\n  let attemptNums = 0;\n  let lastError = undefined;\n  while (attemptNums < maxAttempts) {\n    try {\n      return await _ensureServerStarted(options);\n    } catch (err) {\n      lastError = err;\n      console.warn(err);\n      HTTP_PORT = 0;\n      // stop all PIO Home servers\n      await shutdownAllServers();\n    }\n    attemptNums++;\n  }\n  reportError(lastError);\n  throw lastError;\n}\n\nasync function _ensureServerStarted(options = {}) {\n  if (HTTP_PORT === 0) {\n    HTTP_PORT = options.port || (await findFreePort());\n  }\n  const params = {\n    host: HTTP_HOST,\n    port: HTTP_PORT\n  };\n  if (!(await isServerStarted())) {\n    await new Promise((resolve, reject) => {\n      runPIOCommand(\n        [\n          'home',\n          '--port',\n          HTTP_PORT,\n          '--shutdown-timeout',\n          SERVER_AUTOSHUTDOWN_TIMEOUT,\n          '--no-open'\n        ],\n        (code, stdout, stderr) => {\n          if (code !== 0) {\n            HTTP_PORT = 0;\n            return reject(new Error(stderr));\n          }\n        }\n      );\n      tcpPortUsed.waitUntilUsed(HTTP_PORT, 500, SERVER_LAUNCH_TIMEOUT * 1000).then(\n        () => {\n          resolve(true);\n        },\n        err => {\n          reject(new Error('Could not start PIO Home server: ' + err.toString()));\n        }\n      );\n    });\n  }\n  if (options.onIDECommand) {\n    listenIDECommands(options.onIDECommand);\n  }\n  return params;\n}\n\nexport function shutdownServer() {\n  if (!HTTP_PORT) {\n    return;\n  }\n  return request.get(`http://${HTTP_HOST}:${HTTP_PORT}?__shutdown__=1`);\n}\n\nexport async function shutdownAllServers() {\n  let port = HTTP_PORT_BEGIN;\n  while (port < HTTP_PORT_END) {\n    request.get(`http://${HTTP_HOST}:${port}?__shutdown__=1`).on('error', () => {});\n    port++;\n  }\n  await sleep(2000); // wait for 2 secs while server stops\n}\n\nexport function loadState() {\n  const statePath = path.join(getCoreDir(), 'homestate.json');\n  if (!fs.isFileSync(statePath)) {\n    return null;\n  }\n  try {\n    return JSON.parse(fs.readFileSync(statePath, 'utf8'));\n  } catch (err) {\n    console.warn(err);\n    return null;\n  }\n}\n\nexport function showAtStartup(caller) {\n  const state = loadState();\n  return (\n    !state ||\n    !state.storage ||\n    !state.storage.showOnStartup ||\n    !(caller in state.storage.showOnStartup) ||\n    state.storage.showOnStartup[caller]\n  );\n}\n","/**\n * Copyright (c) 2017-present PlatformIO <contact@platformio.org>\n * All rights reserved.\n *\n * This source code is licensed under the license found in the LICENSE file in\n * the root directory of this source tree.\n */\n\nimport fs from 'fs-plus';\nimport request from 'request';\nimport { runCommand } from '../misc';\nimport tar from 'tar';\nimport zlib from 'zlib';\n\nexport async function download(source, target, retries = 3) {\n  const contentLength = await getContentLength(source);\n\n  if (fileExistsAndSizeMatches(target, contentLength)) {\n    return target;\n  }\n\n  let lastError = '';\n  while (retries >= 0) {\n    try {\n      await _download(source, target);\n      if (fileExistsAndSizeMatches(target, contentLength)) {\n        return target;\n      }\n    } catch (err) {\n      lastError = err;\n      console.warn(err);\n    }\n    retries--;\n  }\n\n  throw new Error(`Failed to download file ${source}: ${lastError}`);\n}\n\nfunction fileExistsAndSizeMatches(target, contentLength) {\n  if (fs.isFileSync(target)) {\n    if (contentLength > 0 && contentLength == fs.getSizeSync(target)) {\n      return true;\n    }\n    try {\n      fs.removeSync(target);\n    } catch (err) {\n      console.warn(err);\n    }\n  }\n  return false;\n}\n\nasync function _download(source, target) {\n  let proxy = null;\n  try {\n    const apmPath = atom.packages.getApmPath();\n    proxy = await new Promise((resolve, reject) => {\n      runCommand(\n        apmPath,\n        ['--no-color', 'config', 'get', 'https-proxy'],\n        (code, stdout) => {\n          if (code !== 0) {\n            return reject(null);\n          }\n          resolve(stdout.trim() === 'null' ? null : stdout.trim());\n        }\n      );\n    });\n  } catch (err) {\n    proxy =\n      (process.env.HTTPS_PROXY && process.env.HTTPS_PROXY.trim()) ||\n      (process.env.HTTP_PROXY && process.env.HTTP_PROXY.trim());\n  }\n  return new Promise((resolve, reject) => {\n    const file = fs.createWriteStream(target);\n    const options = {\n      url: source\n    };\n    if (proxy) {\n      options.proxy = proxy;\n    }\n    request\n      .get(options)\n      .on('error', err => reject(err))\n      .pipe(file);\n    file.on('error', err => reject(err));\n    file.on('finish', () => resolve(target));\n  });\n}\n\nfunction getContentLength(url) {\n  return new Promise(resolve => {\n    request.head(\n      {\n        url\n      },\n      (err, response) => {\n        if (\n          err ||\n          response.statusCode !== 200 ||\n          !response.headers ||\n          !response.headers['content-length']\n        ) {\n          resolve(-1);\n        }\n        resolve(parseInt(response.headers['content-length']));\n      }\n    );\n  });\n}\n\nexport function extractTarGz(source, destination) {\n  return new Promise((resolve, reject) => {\n    fs.createReadStream(source)\n      .pipe(zlib.createGunzip())\n      .on('error', err => reject(err))\n      .pipe(\n        tar.extract({\n          cwd: destination\n        })\n      )\n      .on('error', err => reject(err))\n      .on('close', () => resolve(destination));\n  });\n}\n\nexport function PEPverToSemver(pepver) {\n  return pepver.replace(/(\\.\\d+)\\.?(dev|a|b|rc|post)/, '$1-$2.');\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__11__;","/**\n * Copyright (c) 2017-present PlatformIO <contact@platformio.org>\n * All rights reserved.\n *\n * This source code is licensed under the license found in the LICENSE file in\n * the root directory of this source tree.\n */\n\nexport default class BaseStage {\n  static STATUS_CHECKING = 0;\n  static STATUS_INSTALLING = 1;\n  static STATUS_SUCCESSED = 2;\n  static STATUS_FAILED = 3;\n\n  constructor(stateStorage, onStatusChange, params = {}) {\n    this.stateStorage = stateStorage;\n    this.onStatusChange = onStatusChange;\n    this.params = params;\n\n    this._status = BaseStage.STATUS_CHECKING;\n  }\n\n  get name() {\n    return 'Stage';\n  }\n\n  get status() {\n    return this._status;\n  }\n\n  set status(status) {\n    this._status = status;\n    this.onStatusChange();\n  }\n\n  get stateKey() {\n    return this.name.toLocaleLowerCase().replace(/\\s+/g, '-');\n  }\n\n  get state() {\n    return this.stateStorage.getValue(this.stateKey);\n  }\n\n  set state(value) {\n    this.stateStorage.setValue(this.stateKey, value);\n  }\n\n  check() {\n    throw new Error('Stage must implement a `check` method');\n  }\n\n  install() {\n    throw new Error('Stage must implement an `install` method');\n  }\n\n  destroy() {}\n}\n","/**\n * Copyright (c) 2017-present PlatformIO <contact@platformio.org>\n * All rights reserved.\n *\n * This source code is licensed under the license found in the LICENSE file in\n * the root directory of this source tree.\n */\n\nimport {\n  disposeSubscriptions,\n  getPythonExecutable,\n  isPIOProject,\n  runCommand\n} from '../misc';\n\nimport path from 'path';\nimport { runPIOCommand } from '../core';\n\nexport default class ProjectIndexer {\n  static AUTO_REBUILD_DELAY = 3000;\n\n  constructor(projectDir, options) {\n    this.projectDir = projectDir;\n    this.options = options;\n    this.subscriptions = [];\n    this.dirWatchSubscriptions = [];\n\n    this._rebuildTimeout = undefined;\n    this._updateDirWatchersTimeout = undefined;\n    this._inProgress = false;\n\n    this.setupWatchers();\n  }\n\n  requestRebuild() {\n    if (this._rebuildTimeout) {\n      clearTimeout(this._rebuildTimeout);\n    }\n    this._rebuildTimeout = setTimeout(\n      this.rebuild.bind(this),\n      ProjectIndexer.AUTO_REBUILD_DELAY\n    );\n  }\n\n  rebuild() {\n    if (this._inProgress || !isPIOProject(this.projectDir)) {\n      return;\n    }\n    return this.options.withProgress(async () => {\n      this._inProgress = true;\n      try {\n        await new Promise((resolve, reject) => {\n          runPIOCommand(\n            ['init', '--ide', this.options.ide, '--project-dir', this.projectDir],\n            (code, stdout, stderr) => {\n              if (code === 0) {\n                resolve();\n              } else {\n                reject(new Error(stderr));\n              }\n            }\n          );\n        });\n      } catch (err) {\n        console.warn(err);\n      }\n      this._inProgress = false;\n    });\n  }\n\n  setupWatchers() {\n    const watcher = this.options.createFileSystemWatcher(\n      path.join(this.projectDir, 'platformio.ini')\n    );\n    this.subscriptions.push(\n      watcher,\n      watcher.onDidCreate(() => {\n        this.requestRebuild();\n        this.requestUpdateDirWatchers();\n      }),\n      watcher.onDidChange(() => {\n        this.requestRebuild();\n        this.requestUpdateDirWatchers();\n      }),\n      watcher.onDidDelete(() => this.updateDirWatchers())\n    );\n    this.requestUpdateDirWatchers();\n  }\n\n  requestUpdateDirWatchers() {\n    if (this._updateDirWatchersTimeout) {\n      clearTimeout(this._updateDirWatchersTimeout);\n    }\n    this._updateDirWatchersTimeout = setTimeout(\n      this.updateDirWatchers.bind(this),\n      ProjectIndexer.AUTO_REBUILD_DELAY * 3\n    );\n  }\n\n  async updateDirWatchers() {\n    disposeSubscriptions(this.dirWatchSubscriptions);\n    if (!isPIOProject(this.projectDir)) {\n      return;\n    }\n    try {\n      (await this.fetchWatchDirs()).forEach(dir => {\n        const watcher = this.options.createDirSystemWatcher(dir);\n        this.dirWatchSubscriptions.push(\n          watcher,\n          watcher.onDidCreate(() => this.requestRebuild()),\n          watcher.onDidChange(() => this.requestRebuild()),\n          watcher.onDidDelete(() => this.requestRebuild())\n        );\n      });\n    } catch (err) {\n      console.warn(err);\n    }\n  }\n\n  async fetchWatchDirs() {\n    if (!ProjectIndexer.PythonExecutable) {\n      ProjectIndexer.PythonExecutable = await getPythonExecutable(\n        this.options.useBuiltinPIOCore\n      );\n    }\n    const scriptLines = [\n      'import os',\n      'from platformio.project import helpers',\n      'libdeps_dir = helpers.get_project_libdeps_dir()',\n      'watch_dirs = [helpers.get_project_global_lib_dir(), helpers.get_project_lib_dir(), libdeps_dir]',\n      'watch_dirs.extend(os.path.join(libdeps_dir, d) for d in (os.listdir(libdeps_dir) if os.path.isdir(libdeps_dir) else []) if os.path.isdir(os.path.join(libdeps_dir, d)))',\n      'print(\":\".join(watch_dirs))'\n    ];\n    return new Promise((resolve, reject) => {\n      runCommand(\n        ProjectIndexer.PythonExecutable,\n        ['-c', scriptLines.join(';')],\n        (code, stdout, stderr) => {\n          if (code === 0) {\n            resolve(\n              stdout\n                .toString()\n                .trim()\n                .split(':')\n            );\n          } else {\n            reject(new Error(stderr));\n          }\n        },\n        {\n          spawnOptions: {\n            cwd: this.projectDir\n          }\n        }\n      );\n    });\n  }\n\n  dispose() {\n    disposeSubscriptions(this.dirWatchSubscriptions);\n    disposeSubscriptions(this.subscriptions);\n    if (this._rebuildTimeout) {\n      clearTimeout(this._rebuildTimeout);\n    }\n    if (this._updateDirWatchersTimeout) {\n      clearTimeout(this._updateDirWatchersTimeout);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017-present PlatformIO <contact@platformio.org>\n * All rights reserved.\n *\n * This source code is licensed under the license found in the LICENSE file in\n * the root directory of this source tree.\n */\n\nimport * as core from './core';\nimport * as home from './home';\nimport * as misc from './misc';\n\nimport { ProjectTasks, TaskItem } from './project/tasks';\n\nimport BaseStage from './installer/stages/base';\nimport PlatformIOCoreStage from './installer/stages/platformio-core';\nimport ProjectIndexer from './project/indexer';\nimport ProjectObserver from './project/observer';\n\nconst installer = {\n  BaseStage,\n  PlatformIOCoreStage\n};\n\nconst project = {\n  ProjectIndexer,\n  ProjectObserver,\n  ProjectTasks,\n  TaskItem\n};\n\nexport { core, home, installer, project, misc };\n","module.exports = __WEBPACK_EXTERNAL_MODULE__15__;","module.exports = __WEBPACK_EXTERNAL_MODULE__16__;","module.exports = require(\"zlib\");","module.exports = __WEBPACK_EXTERNAL_MODULE__18__;","module.exports = __WEBPACK_EXTERNAL_MODULE__19__;","module.exports = __WEBPACK_EXTERNAL_MODULE__20__;","/**\n * Copyright (c) 2017-present PlatformIO <contact@platformio.org>\n * All rights reserved.\n *\n * This source code is licensed under the license found in the LICENSE file in\n * the root directory of this source tree.\n */\n\nimport ProjectConfig from './config';\nimport path from 'path';\n\nexport class ProjectTasks {\n  static baseTasks = [\n    {\n      name: 'Build',\n      args: ['run'],\n      multienv: true\n    },\n    {\n      name: 'Upload',\n      args: ['run', '--target', 'upload'],\n      multienv: true\n    },\n    {\n      name: 'Monitor',\n      args: ['device', 'monitor'],\n      multienv: true\n    },\n    {\n      name: 'Upload and Monitor',\n      args: ['run', '--target', 'upload', '--target', 'monitor'],\n      multienv: true,\n      filter: data => !data.platform.includes('riscv_gap')\n    },\n    {\n      name: 'Upload using Programmer',\n      args: ['run', '--target', 'program'],\n      multienv: true,\n      filter: data => data.platform.includes('atmelavr')\n    },\n    {\n      name: 'Set Fuses',\n      args: ['run', '--target', 'fuses'],\n      multienv: true,\n      filter: data => data.platform.includes('atmelavr')\n    },\n    {\n      name: 'Upload and Set Fuses',\n      args: ['run', '--target', 'fuses', '--target', 'upload'],\n      multienv: true,\n      filter: data => data.platform.includes('atmelavr')\n    },\n    {\n      name: 'Upload using Programmer and Set Fuses',\n      args: ['run', '--target', 'fuses', '--target', 'program'],\n      multienv: true,\n      filter: data => data.platform.includes('atmelavr')\n    },\n    {\n      name: 'Upload File System image',\n      args: ['run', '--target', 'uploadfs'],\n      multienv: true,\n      filter: data =>\n        data.platform.includes('espressif') || data.platform.includes('riscv_gap')\n    },\n    {\n      name: 'Erase Flash',\n      args: ['run', '--target', 'erase'],\n      multienv: true,\n      filter: data =>\n        data.platform.includes('espressif') || data.platform.includes('nordicnrf')\n    },\n    {\n      name: 'Devices',\n      args: ['device', 'list']\n    },\n    {\n      name: 'Test',\n      args: ['test'],\n      multienv: true\n    },\n    {\n      name: 'Check',\n      args: ['check'],\n      multienv: true\n    },\n    {\n      name: 'Pre-Debug',\n      description: 'build in debug mode',\n      args: ['debug'],\n      multienv: true\n    },\n    {\n      name: 'Clean',\n      args: ['run', '--target', 'clean'],\n      multienv: true\n    },\n    {\n      name: 'Verbose Build',\n      args: ['run', '--verbose'],\n      multienv: true\n    },\n    {\n      name: 'Verbose Upload',\n      args: ['run', '--verbose', '--target', 'upload'],\n      multienv: true\n    },\n    {\n      name: 'Remote Upload',\n      args: ['remote', 'run', '--target', 'upload'],\n      multienv: true\n    },\n    {\n      name: 'Remote Monitor',\n      args: ['remote', 'device', 'monitor']\n    },\n    {\n      name: 'Remote Devices',\n      args: ['remote', 'device', 'list']\n    },\n    {\n      name: 'Remote Test',\n      args: ['remote', 'test'],\n      multienv: true\n    }\n  ];\n\n  constructor(projectDir, ide) {\n    this.projectDir = projectDir;\n    this.ide = ide;\n  }\n\n  async getTasks() {\n    if (!this.projectDir) {\n      return [];\n    }\n    const projectEnvs = [];\n\n    const prevCWD = process.cwd();\n    process.chdir(this.projectDir);\n    try {\n      const config = new ProjectConfig(path.join(this.projectDir, 'platformio.ini'));\n      for (const env of config.envs()) {\n        const platform = config.get(`env:${env}`, 'platform');\n        if (!platform) {\n          continue;\n        }\n        projectEnvs.push({\n          env,\n          platform\n        });\n      }\n    } catch (err) {\n      console.warn(\n        `Could not parse \"platformio.ini\" file in ${this.projectDir}: ${err}`\n      );\n      return [];\n    }\n    // restore original CWD\n    process.chdir(prevCWD);\n\n    const result = [];\n\n    // base tasks\n    ProjectTasks.baseTasks.forEach(task => {\n      if (!task.filter || projectEnvs.some(data => task.filter(data))) {\n        result.push(new TaskItem(task.name, task.description, task.args.slice(0)));\n      }\n    });\n\n    // multi environment tasks\n    if (projectEnvs.length > 1) {\n      projectEnvs.forEach(data => {\n        ProjectTasks.baseTasks.forEach(task => {\n          if (task.multienv && (!task.filter || task.filter(data))) {\n            result.push(\n              new TaskItem(task.name, task.description, [\n                ...task.args.slice(0),\n                '--environment',\n                data.env\n              ])\n            );\n          }\n        });\n      });\n    }\n\n    // Misc tasks\n    result.push(new TaskItem('Update project libraries', undefined, ['lib', 'update']));\n    result.push(\n      new TaskItem('Rebuild IntelliSense Index', undefined, ['init', '--ide', this.ide])\n    );\n\n    return result;\n  }\n}\n\nexport class TaskItem {\n  constructor(name, description, args) {\n    this.name = name;\n    this.description = description;\n    this.args = args;\n  }\n\n  get coreTarget() {\n    if (this.args[0] !== 'run') {\n      return this.args[0];\n    }\n    const index = this.args.indexOf('--target');\n    return index !== -1 ? this.args[index + 1] : 'build';\n  }\n\n  get coreEnv() {\n    const index = this.args.indexOf('--environment');\n    return index !== -1 ? this.args[index + 1] : undefined;\n  }\n\n  get id() {\n    let id = this.name;\n    if (this.coreEnv) {\n      id += ` (${this.coreEnv})`;\n    }\n    return id;\n  }\n\n  get title() {\n    return this.description ? `${this.id} [${this.description}]` : this.id;\n  }\n\n  isBuild() {\n    return this.name.startsWith('Build');\n  }\n\n  isClean() {\n    return this.name.startsWith('Clean');\n  }\n\n  isTest() {\n    return this.name.startsWith('Test');\n  }\n}\n","/**\n * Copyright (c) 2017-present PlatformIO <contact@platformio.org>\n * All rights reserved.\n *\n * This source code is licensed under the license found in the LICENSE file in\n * the root directory of this source tree.\n */\n\nimport fs from 'fs';\nimport glob from 'glob';\n\nexport default class ProjectConfig {\n  reLines = /[\\r\\n]+/g;\n  reComment = /(^\\s*;|\\s+;|^\\s*#).+/;\n  reSection = /^\\[([^\\]]+)\\]/;\n  reOptionValue = /^([^=]+)=(.*)/;\n  reMultiLineValue = /^\\s+(.*)/;\n  reInterpolation = /\\$\\{([^\\.\\}]+)\\.([^\\}]+)\\}/g;\n\n  static parse_multi_values(items) {\n    const result = [];\n    if (!items) {\n      return result;\n    }\n    if (typeof items == 'string') {\n      items = items.split(items.includes('\\n') ? '\\n' : ', ');\n    }\n    for (let item of items) {\n      item = item.trim();\n      if (item) {\n        result.push(item);\n      }\n    }\n    return result;\n  }\n\n  constructor(path) {\n    this.path = path;\n    this._parsed = [];\n    this._data = {};\n    if (path) {\n      this.read(path);\n    }\n  }\n\n  read(path) {\n    if (this._parsed.includes(path)) {\n      return;\n    }\n    this._parsed.push(path);\n    let section = null;\n    let option = null;\n    for (let line of fs.readFileSync(path, 'utf-8').split(this.reLines)) {\n      // Remove comments\n      line = line.replace(this.reComment, '');\n      if (!line) {\n        continue;\n      }\n\n      // Section\n      const mSection = line.match(this.reSection);\n      if (mSection) {\n        section = mSection[1];\n        if (!this._data[section]) {\n          this._data[section] = {};\n        }\n        option = null;\n        continue;\n      }\n\n      // Option and value\n      const mOptionValue = line.match(this.reOptionValue);\n      if (section && mOptionValue) {\n        option = mOptionValue[1].trim();\n        this._data[section][option] = mOptionValue[2].trim();\n        continue;\n      }\n\n      // Multi-line value\n      const mMultiLineValue = line.match(this.reMultiLineValue);\n      if (option && mMultiLineValue) {\n        this._data[section][option] += '\\n' + mMultiLineValue[0];\n      }\n    }\n\n    this.getlist('platformio', 'extra_configs').forEach(pattern =>\n      glob.sync(pattern).forEach(item => this.read(item))\n    );\n  }\n\n  getraw(section, option) {\n    if (!this._data[section]) {\n      throw `NoSectionError: ${section}`;\n    }\n    let value = null;\n    if (option in this._data[section]) {\n      value = this._data[section][option];\n    } else if (section.startsWith('env:')) {\n      value = this.get('env', option);\n    } else {\n      throw `NoOptionError: ${section} -> ${option}`;\n    }\n    if (!value.includes('${') || !value.includes('}')) {\n      return value;\n    }\n    return value.replace(this.reInterpolation, (_, section, option) =>\n      this._reInterpolationHandler(section, option)\n    );\n  }\n\n  _reInterpolationHandler(section, option) {\n    if (section == 'sysenv') {\n      return process.env[option] || '';\n    }\n    return this.get(section, option);\n  }\n\n  sections() {\n    return Object.keys(this._data);\n  }\n\n  envs() {\n    return this.sections()\n      .filter(item => item.startsWith('env:'))\n      .map(item => item.substring(4));\n  }\n\n  get(section, option, default_ = undefined) {\n    try {\n      return this.getraw(section, option);\n    } catch (err) {\n      return default_;\n    }\n  }\n\n  getlist(section, option, default_ = undefined) {\n    return ProjectConfig.parse_multi_values(this.get(section, option, default_));\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__23__;","/**\n * Copyright (c) 2017-present PlatformIO <contact@platformio.org>\n * All rights reserved.\n *\n * This source code is licensed under the license found in the LICENSE file in\n * the root directory of this source tree.\n */\n\nimport * as core from '../../core';\nimport * as helpers from '../helpers';\nimport * as home from '../../home';\nimport * as misc from '../../misc';\n\nimport BaseStage from './base';\nimport fs from 'fs-plus';\nimport os from 'os';\nimport path from 'path';\nimport semver from 'semver';\nimport tmp from 'tmp';\n\nexport default class PlatformIOCoreStage extends BaseStage {\n  static UPGRADE_PIOCORE_TIMEOUT = 86400 * 7 * 1000; // 7 days\n  static PENV_LOCK_FILE_NAME = 'piopenv.lock';\n  static PENV_LOCK_VERSION = `${os.type()}-${os.arch()}-${os.release()}`;\n\n  static pythonVersion = '3.7.5';\n  static getPipUrl = 'https://bootstrap.pypa.io/get-pip.py';\n  static virtualenvUrl =\n    'https://files.pythonhosted.org/packages/e7/80/15d28e5a075fb02366ce97558120bb987868dab3600233ec7be032dc6d01/virtualenv-16.7.7.tar.gz';\n  static pioCoreDevelopUrl =\n    'https://github.com/platformio/platformio/archive/develop.zip';\n\n  constructor() {\n    super(...arguments);\n    tmp.setGracefulCleanup();\n\n    this._skipPIPInstalling = false;\n  }\n\n  get name() {\n    return 'PlatformIO Core';\n  }\n\n  async whereIsPython() {\n    let status = this.params.pythonPrompt.STATUS_TRY_AGAIN;\n    do {\n      const pythonExecutable = await misc.getPythonExecutable(\n        this.params.useBuiltinPIOCore\n      );\n      if (pythonExecutable) {\n        return pythonExecutable;\n      }\n\n      if (process.platform.startsWith('win')) {\n        try {\n          return await this.installPythonForWindows();\n        } catch (err) {\n          console.warn(err);\n        }\n      }\n\n      const result = await this.params.pythonPrompt.prompt();\n      status = result.status;\n      if (status === this.params.pythonPrompt.STATUS_CUSTOMEXE) {\n        return result.pythonExecutable;\n      }\n    } while (status !== this.params.pythonPrompt.STATUS_ABORT);\n\n    this.status = BaseStage.STATUS_FAILED;\n    throw new Error(\n      'Can not find Python Interpreter. Please install Python 3.5 or above manually'\n    );\n  }\n\n  async installPythonForWindows() {\n    // https://www.python.org/ftp/python/3.7.4/python-3.7.4.exe\n    // https://www.python.org/ftp/python/3.7.4/python-3.7.4-amd64.exe\n    const pythonArch = process.arch === 'x64' ? '-amd64' : '';\n    const installerUrl = `https://www.python.org/ftp/python/${PlatformIOCoreStage.pythonVersion}/python-${PlatformIOCoreStage.pythonVersion}${pythonArch}.exe`;\n    const installer = await helpers.download(\n      installerUrl,\n      path.join(core.getCacheDir(), path.basename(installerUrl))\n    );\n    const targetDir = path.join(core.getCoreDir(), 'python37');\n    let pythonPath = path.join(targetDir, 'python.exe');\n\n    if (!fs.isFileSync(pythonPath)) {\n      pythonPath = await this.installPythonFromWindowsInstaller(installer, targetDir);\n      this._skipPIPInstalling = true;\n    }\n\n    // append temporary to system environment\n    process.env.PATH = [\n      targetDir,\n      path.join(targetDir, 'Scripts'),\n      process.env.PATH\n    ].join(path.delimiter);\n    process.env.Path = process.env.PATH;\n    return pythonPath;\n  }\n\n  installPythonFromWindowsInstaller(installer, targetDir) {\n    if (fs.isDirectorySync(targetDir)) {\n      try {\n        fs.removeSync(targetDir);\n      } catch (err) {\n        console.warn(err);\n      }\n    }\n    const logPath = path.join(core.getCacheDir(), 'python-installer.log');\n    return new Promise((resolve, reject) => {\n      misc.runCommand(\n        installer,\n        [\n          '/quiet',\n          '/log',\n          logPath,\n          'SimpleInstall=1',\n          'InstallAllUsers=0',\n          'InstallLauncherAllUsers=0',\n          'Shortcuts=0',\n          'Include_lib=1',\n          'Include_pip=1',\n          'Include_doc=0',\n          'Include_launcher=0',\n          'Include_test=0',\n          'Include_tcltk=0',\n          `TargetDir=${targetDir}`,\n          `DefaultAllUsersTargetDir=${targetDir}`,\n          `DefaultJustForMeTargetDir=${targetDir}`\n        ],\n        code => {\n          if (code === 0 && fs.isFileSync(path.join(targetDir, 'python.exe'))) {\n            return resolve(path.join(targetDir, 'python.exe'));\n          }\n          if (fs.isFileSync(logPath)) {\n            console.error(fs.readFileSync(logPath).toString());\n          }\n          return reject(\n            new Error(\n              'Could not install Python 3 automatically. Please install it manually from https://python.org'\n            )\n          );\n        },\n        {\n          spawnOptions: {\n            shell: true\n          }\n        }\n      );\n    });\n  }\n\n  cleanVirtualEnvDir() {\n    const envDir = core.getEnvDir();\n    if (!fs.isDirectorySync(envDir)) {\n      return true;\n    }\n    try {\n      fs.removeSync(envDir);\n      return true;\n    } catch (err) {\n      console.warn(err);\n      return false;\n    }\n  }\n\n  isCondaInstalled() {\n    return new Promise(resolve => {\n      misc.runCommand('conda', ['--version'], code => resolve(code === 0));\n    });\n  }\n\n  createVirtualenvWithConda() {\n    this.cleanVirtualEnvDir();\n    return new Promise((resolve, reject) => {\n      misc.runCommand(\n        'conda',\n        ['create', '--yes', '--quiet', 'python=2', 'pip', '--prefix', core.getEnvDir()],\n        (code, stdout, stderr) => {\n          if (code === 0) {\n            return resolve(stdout);\n          } else {\n            return reject(new Error(`Conda Virtualenv: ${stderr}`));\n          }\n        }\n      );\n    });\n  }\n\n  async createVirtualenvWithLocal() {\n    this.cleanVirtualEnvDir();\n    const pythonExecutable = await this.whereIsPython();\n    const venvCmdOptions = [\n      [pythonExecutable, '-m', 'venv', core.getEnvDir()],\n      [pythonExecutable, '-m', 'virtualenv', '-p', pythonExecutable, core.getEnvDir()],\n      ['virtualenv', '-p', pythonExecutable, core.getEnvDir()],\n      [pythonExecutable, '-m', 'virtualenv', core.getEnvDir()],\n      ['virtualenv', core.getEnvDir()]\n    ];\n    let lastError = null;\n    for (const cmdOptions of venvCmdOptions) {\n      this.cleanVirtualEnvDir();\n      try {\n        return await new Promise((resolve, reject) => {\n          misc.runCommand(\n            cmdOptions[0],\n            cmdOptions.slice(1),\n            (code, stdout, stderr) => {\n              return code === 0\n                ? resolve(stdout)\n                : reject(new Error(`User's Virtualenv: ${stderr}`));\n            }\n          );\n        });\n      } catch (err) {\n        console.warn(err);\n        lastError = err;\n      }\n    }\n\n    throw lastError;\n  }\n\n  async createVirtualenvWithDownload() {\n    this.cleanVirtualEnvDir();\n    const archivePath = await helpers.download(\n      PlatformIOCoreStage.virtualenvUrl,\n      path.join(core.getCacheDir(), 'virtualenv.tar.gz')\n    );\n    const tmpDir = tmp.dirSync({\n      dir: core.getCacheDir(),\n      unsafeCleanup: true\n    }).name;\n    const dstDir = await helpers.extractTarGz(archivePath, tmpDir);\n    const virtualenvScript = fs\n      .listTreeSync(dstDir)\n      .find(item => path.basename(item) === 'virtualenv.py');\n    if (!virtualenvScript) {\n      throw new Error('Can not find virtualenv.py script');\n    }\n    const pythonExecutable = await this.whereIsPython();\n    return new Promise((resolve, reject) => {\n      misc.runCommand(\n        pythonExecutable,\n        [virtualenvScript, core.getEnvDir()],\n        (code, stdout, stderr) => {\n          try {\n            fs.removeSync(tmpDir);\n          } catch (err) {\n            console.warn(err);\n          }\n          if (code === 0) {\n            return resolve(stdout);\n          } else {\n            let userNotification = `Virtualenv Create: ${stderr}\\n${stdout}`;\n            if (stderr.includes('WindowsError: [Error 5]')) {\n              userNotification = `If you use Antivirus, it can block PlatformIO Installer. Try to disable it for a while.\\n\\n${userNotification}`;\n            }\n            return reject(new Error(userNotification));\n          }\n        }\n      );\n    });\n  }\n\n  async installVirtualenvPackage() {\n    const pythonExecutable = await this.whereIsPython();\n    return new Promise((resolve, reject) => {\n      misc.runCommand(\n        pythonExecutable,\n        ['-m', 'pip', 'install', 'virtualenv'],\n        (code, stdout, stderr) => {\n          if (code === 0) {\n            return resolve(stdout);\n          } else {\n            return reject(new Error(`Install Virtualenv globally: ${stderr}`));\n          }\n        }\n      );\n    });\n  }\n\n  async createVirtualenv() {\n    if (await this.isCondaInstalled()) {\n      return await this.createVirtualenvWithConda();\n    }\n    try {\n      await this.createVirtualenvWithLocal();\n    } catch (err) {\n      console.warn(err);\n      try {\n        await this.createVirtualenvWithDownload();\n      } catch (errDl) {\n        console.warn(errDl);\n        try {\n          await this.installVirtualenvPackage();\n          await this.createVirtualenvWithLocal();\n        } catch (errPkg) {\n          misc.reportError(errDl);\n          console.warn(errPkg);\n          throw new Error(\n            `Could not create PIO Core Virtual Environment. Please create it manually -> http://bit.ly/pio-core-virtualenv \\n ${errDl.toString()}`\n          );\n        }\n      }\n    }\n  }\n\n  async installPIP(pythonExecutable) {\n    fs.writeFileSync(\n      path.join(core.getEnvDir(), 'pip.conf'),\n      ['[global]', 'user=no'].join('\\n')\n    );\n    if (this._skipPIPInstalling) {\n      return;\n    }\n    // we use manual downloading to resolve SSL issue with old `pip`\n    const getPipScript = await helpers.download(\n      PlatformIOCoreStage.getPipUrl,\n      path.join(core.getCacheDir(), path.basename(PlatformIOCoreStage.getPipUrl))\n    );\n    return new Promise((resolve, reject) => {\n      misc.runCommand(pythonExecutable, [getPipScript], (code, stdout, stderr) => {\n        return code === 0 ? resolve(stdout) : reject(stderr);\n      });\n    });\n  }\n\n  async installPIOCore() {\n    const pythonExecutable = await this.whereIsPython();\n\n    // Try to upgrade PIP to the latest version with updated openSSL\n    try {\n      await this.installPIP(pythonExecutable);\n    } catch (err) {\n      console.warn(err);\n      misc.reportError(new Error(`Installing PIP: ${err.toString()}`));\n    }\n\n    // Install dependencies\n    const args = ['-m', 'pip', 'install', '-U'];\n    if (this.params.useDevelopmentPIOCore) {\n      args.push(PlatformIOCoreStage.pioCoreDevelopUrl);\n    } else {\n      args.push('platformio');\n    }\n    return new Promise((resolve, reject) => {\n      misc.runCommand(pythonExecutable, args, (code, stdout, stderr) => {\n        if (code === 0) {\n          resolve(stdout);\n        } else {\n          if (misc.IS_WINDOWS) {\n            stderr = `If you have antivirus/firewall/defender software in a system, try to disable it for a while. \\n ${stderr}`;\n          }\n          return reject(new Error(`PIP Core: ${stderr}`));\n        }\n      });\n    });\n  }\n\n  installPIOHome() {\n    return new Promise(resolve => {\n      core.runPIOCommand(\n        ['home', '--host', '__do_not_start__'],\n        (code, stdout, stderr) => {\n          if (code !== 0) {\n            console.warn(stdout, stderr);\n          }\n          return resolve(true);\n        }\n      );\n    });\n  }\n\n  initState() {\n    let state = this.state;\n    if (!state || !state.pioCoreChecked || !state.lastIDEVersion) {\n      state = {\n        pioCoreChecked: 0,\n        lastIDEVersion: null\n      };\n    }\n    return state;\n  }\n\n  async autoUpgradePIOCore(currentCoreVersion) {\n    const newState = this.initState();\n    const now = new Date().getTime();\n    if (\n      (process.env.PLATFORMIO_IDE &&\n        newState.lastIDEVersion &&\n        newState.lastIDEVersion !== process.env.PLATFORMIO_IDE) ||\n      now - PlatformIOCoreStage.UPGRADE_PIOCORE_TIMEOUT >\n        parseInt(newState.pioCoreChecked)\n    ) {\n      newState.pioCoreChecked = now;\n      // PIO Core\n      await new Promise(resolve => {\n        core.runPIOCommand(\n          [\n            'upgrade',\n            ...(this.params.useDevelopmentPIOCore &&\n            !semver.prerelease(currentCoreVersion)\n              ? ['--dev']\n              : [])\n          ],\n          (code, stdout, stderr) => {\n            if (code !== 0) {\n              console.warn(stdout, stderr);\n            }\n            resolve(true);\n          }\n        );\n      });\n    }\n    newState.lastIDEVersion = process.env.PLATFORMIO_IDE;\n    this.state = newState;\n  }\n\n  checkPenvLocked() {\n    const lockPath = path.join(\n      core.getEnvDir(),\n      PlatformIOCoreStage.PENV_LOCK_FILE_NAME\n    );\n    if (!fs.isFileSync(lockPath)) {\n      // skip manually created virtualenv\n      return;\n    }\n    if (\n      fs\n        .readFileSync(lockPath)\n        .toString()\n        .trim() !== PlatformIOCoreStage.PENV_LOCK_VERSION.trim()\n    ) {\n      throw new Error('Virtual environment is outdated');\n    }\n    return true;\n  }\n\n  lockPenvDir() {\n    fs.writeFileSync(\n      path.join(core.getEnvDir(), PlatformIOCoreStage.PENV_LOCK_FILE_NAME),\n      PlatformIOCoreStage.PENV_LOCK_VERSION\n    );\n  }\n\n  async check() {\n    const coreVersion = helpers.PEPverToSemver(await core.getVersion());\n\n    if (this.params.useBuiltinPIOCore) {\n      if (!fs.isDirectorySync(core.getEnvBinDir())) {\n        throw new Error('Virtual environment is not created');\n      }\n      this.checkPenvLocked();\n      try {\n        await this.autoUpgradePIOCore(coreVersion);\n      } catch (err) {\n        console.warn(err);\n      }\n    }\n\n    if (semver.lt(coreVersion, this.params.pioCoreMinVersion)) {\n      this.params.setUseBuiltinPIOCore(true);\n      this.params.useBuiltinPIOCore = true;\n      this.params.useDevelopmentPIOCore =\n        this.params.useDevelopmentPIOCore ||\n        semver.prerelease(this.params.pioCoreMinVersion);\n      throw new Error(`Incompatible PIO Core ${coreVersion}`);\n    }\n\n    this.status = BaseStage.STATUS_SUCCESSED;\n    console.info(`Found PIO Core ${coreVersion}`);\n    return true;\n  }\n\n  async install() {\n    if (this.status === BaseStage.STATUS_SUCCESSED) {\n      return true;\n    }\n    if (!this.params.useBuiltinPIOCore) {\n      this.status = BaseStage.STATUS_SUCCESSED;\n      return true;\n    }\n    this.status = BaseStage.STATUS_INSTALLING;\n\n    try {\n      // shutdown all PIO Home servers which block python.exe on Windows\n      await home.shutdownAllServers();\n\n      await this.createVirtualenv();\n      this.lockPenvDir();\n\n      await this.installPIOCore();\n      await this.installPIOHome();\n    } catch (err) {\n      misc.reportError(err);\n      throw err;\n    }\n\n    this.status = BaseStage.STATUS_SUCCESSED;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2017-present PlatformIO <contact@platformio.org>\n * All rights reserved.\n *\n * This source code is licensed under the license found in the LICENSE file in\n * the root directory of this source tree.\n */\n\nimport ProjectIndexer from './indexer';\nimport { disposeSubscriptions } from '../misc';\n\nexport default class ProjectObserver {\n  constructor(options) {\n    this.options = options;\n    this._indexers = [];\n  }\n\n  async update(projectDirs) {\n    // remove non-existing\n    this._indexers = this._indexers.filter(item => {\n      if (projectDirs.includes(item.projectDir)) {\n        return true;\n      }\n      item.dispose();\n      return false;\n    });\n\n    for (const projectDir of projectDirs) {\n      if (this._indexers.some(item => item.projectDir === projectDir)) {\n        continue;\n      }\n      const indexer = new ProjectIndexer(projectDir, this.options);\n      this._indexers.push(indexer);\n      await indexer.rebuild();\n    }\n  }\n\n  rebuildIndex() {\n    this._indexers.forEach(item => item.rebuild());\n  }\n\n  dispose() {\n    disposeSubscriptions(this._indexers);\n  }\n}\n"],"sourceRoot":""}